(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{190:function(t,a,e){"use strict";e.r(a);var r=e(0),s=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"范畴论和函数式编程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#范畴论和函数式编程","aria-hidden":"true"}},[t._v("#")]),t._v(" 范畴论和函数式编程")]),e("ul",[e("li",[t._v("[] 什么是函数式编程")]),e("li",[t._v("[] 为什么函数式编程")])]),e("blockquote",[e("p",[t._v("It's the arrows that really matter!")])]),e("p",[t._v("这是有关范畴论的一个重要观点，同样对函数式编程适用。范畴学关心的不是 objects(当然，Objects很重要，但不是最重要的)，而是 Objects 之间的联系。")]),e("h2",{attrs:{id:"理解编程-or-编程的本质"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#理解编程-or-编程的本质","aria-hidden":"true"}},[t._v("#")]),t._v(" 理解编程(or 编程的本质)")]),e("p",[t._v("在讨论这个问题之前，会给出「金字塔原理」一书中提到大脑的两个缺陷：")]),e("ol",[e("li",[t._v("同时不能处理太多的信息")]),e("li",[t._v("不擅长处理无规律的信息")])]),e("p",[t._v("相对而言，我们的大脑习惯性地接收命令式的指令。比如 1 + 3 + 5 + 7 + 9 这个运算，会习惯这样进行思考 ((((1 + 3) + 5) + 7) + 9)。但随着大脑的不断发掘，我们获得 "),e("em",[t._v("归纳")]),t._v(" 和 "),e("em",[t._v("演绎")]),t._v(" 的能力(这是抽象能力的一种)。我们不必反复循环得到结果，而是总结成一个等差公式：")]),e("p",{staticStyle:{"text-align":"center"}},[t._v("S = n * n，其中 n 为项的个数")]),e("p",[t._v("对于编程，宏观的角度来说，是人类思维力的一种体现。在命令式指令的演化过程中，随着代码的逐渐增多，复杂度地逐渐提升。我们会将描述某一行为或特性包含在一个块中，就像我们抽象 1 + 3 + 5 + 7 + 9 的行为一样。")]),e("p",[t._v("那么，什么是编程。")]),e("p",[t._v("基本的层面，似乎可以这样理解：就是告诉计算机去做什么。比如到内存 x 处获取内容，将它和寄存器的内容相加。但是当我们解决一个复杂的问题，我们会想着把问题化小，先求解小问题的解。")]),e("p",[t._v("这似乎就是编程的本质：将小问题的解组合起来，从而产生大问题的解(Decomposable & ReComposable)。")]),e("p",[t._v("这和我们进化后的大脑的思考逻辑一样(记得没，我说过编程是人类思维力一种体现)，如果需要购买一辆车子，就先要赚足够的钱，并且考得驾照。")]),e("p",[t._v("将信息进行结构化的分解并重新复合，是对人类思维缺陷的一种妥协。我们需要结构化的代码，并不是因为结构化的程序看上去有多么地美好，而是我们的大脑无法有效地处理非结构化的信息。")]),e("p",[t._v("当我们将过程结构化地分解到代码块中，就可以忘掉代码块的实现细节。这是有意义的，我们只需要去关心代码块之间的关系即可。在面向对象编程中，类声明和抽象接口就是分解；在函数式编程中，函数声明就是分解。当然，我们简化了很多东西，不管你认为面向对象编程是 “封装、继承和多态” 的集合，还是 “功能黑箱化、交流接口化”，但要点就是上面的。")]),e("h2",{attrs:{id:"面向对象编程和函数式编程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#面向对象编程和函数式编程","aria-hidden":"true"}},[t._v("#")]),t._v(" 面向对象编程和函数式编程")]),e("p",[t._v("都是结构化思维的产物。")]),e("h2",{attrs:{id:"为什么是函数式编程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为什么是函数式编程","aria-hidden":"true"}},[t._v("#")]),t._v(" 为什么是函数式编程")]),e("h3",{attrs:{id:"多核革命"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多核革命","aria-hidden":"true"}},[t._v("#")]),t._v(" 多核革命")]),e("h3",{attrs:{id:"未来"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#未来","aria-hidden":"true"}},[t._v("#")]),t._v(" 未来")])])}],!1,null,null,null);a.default=s.exports}}]);