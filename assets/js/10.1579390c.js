(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{161:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[t._m(0),s("p",[t._v("资源链接")]),s("ul",[s("li",[s("a",{attrs:{href:"https://wiki.haskell.org/Haskell",target:"_blank",rel:"noopener noreferrer"}},[t._v("wiki Haskell"),s("OutboundLink")],1)]),s("li",[s("a",{attrs:{href:"https://wiki.haskell.org/Typeclassopedia#Definition",target:"_blank",rel:"noopener noreferrer"}},[t._v("typeclass"),s("OutboundLink")],1)])]),t._m(1),t._m(2),s("ul",[s("li",[t._v("下载并安装 "),s("a",{attrs:{href:"https://www.haskell.org/platform/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Haskell Platform"),s("OutboundLink")],1)]),s("li",[t._v("在线编程环境 "),s("a",{attrs:{href:"http://www.tryhaskell.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Try Haskell"),s("OutboundLink")],1)])]),t._m(3),t._m(4),t._m(5),t._m(6),t._m(7),t._m(8),t._m(9),t._m(10),t._m(11),t._m(12),t._m(13),t._m(14),t._m(15),s("p",[t._v("因为 Head [3,2,1] > Head [2,10,5] 所以，为 True")]),s("p",[t._v("常用的函数：")]),t._m(16),t._m(17),t._m(18),t._m(19),t._m(20),t._m(21),s("p",[t._v("无限 List 的作用")]),s("p",[t._v("无限 List 是一种常见 List。")]),t._m(22),s("p",[t._v("由于 Haskell 是惰性的。因此：")]),t._m(23),s("p",[t._v("List Comprehension")]),t._m(24),t._m(25),s("p",[t._v("还可以用在函数中。")]),t._m(26),t._m(27),t._m(28),t._m(29),t._m(30),s("p",[t._v("常用函数：")]),t._m(31),t._m(32),t._m(33),t._m(34),t._m(35),t._m(36),t._m(37),s("p",[t._v("查看类型")]),t._m(38),s("p",[t._v("什么是类型")]),s("p",[t._v("在 Haskell 中， 每个表达式都有类型，表明这一表达式所属的范畴。同时，Haskell 也支持类型推导。")]),s("p",[t._v("函数也有类型。")]),t._m(39),s("p",[t._v("常见的类型")]),t._m(40),s("p",[t._v("类型变量 Type variables")]),t._m(41),t._m(42),s("p",[t._v("Typeclasses")]),t._m(43),t._m(44),t._m(45),s("p",[t._v("类型定义行为的接口，如果一个类型属于某个 Typeclass，那它必实现该 Typeclass 所描述的行为。")]),s("p",[t._v("几个基本的 Typeclass:")]),t._m(46),t._m(47),t._m(48),s("p",[t._v("形式是：函数名 空格 空格分隔的参数表")]),t._m(49),s("p",[t._v("为：函数名 空格分隔的参数表 = 函数行为")]),t._m(50),t._m(51),t._m(52),s("p",[t._v("为： 函数名 = 函数行为")]),s("p",[t._v("模式匹配 - Pattern matching")]),s("p",[t._v("模式匹配通过检查数据的特定结构来检查其是否匹配。")]),s("p",[t._v("用递归的方式实现阶乘。")]),t._m(53),s("p",[t._v("模式的顺序很重要：它总是优先匹配最符合的那个，最后才是那个万能的匹配。")]),s("p",[t._v("Tuple 也可以匹配。比如，有个函数将二维空间的矢量相加。")]),t._m(54),s("p",[t._v("List 也可以进行匹配。我们只需要知道 [1,2,3] 本质只是 1:2:3:[] 的语法糖就行。")]),t._m(55),s("p",[t._v("之前我们用 List Comprehension 实现自己的 len 函数，现在我们用模式匹配和递归来重新实现它。")]),t._m(56),s("p",[t._v("还有一种叫 as 模式，可以保留整体的引用。")]),t._m(57),s("p",[t._v("Guards")]),s("p",[t._v("guard 用来检查一个值得某项属性是否为真。")]),t._m(58),t._m(59),s("p",[t._v("比如我们可以自己实现 max 函数。")]),t._m(60),s("p",[t._v("where 可以帮助我们提示代码可读性、减少重复率、不污染命名空间等优点。")]),t._m(61),s("p",[t._v("where 也可以用模式匹配。")]),t._m(62),s("p",[t._v("where 不一定非得用在 Guard 中，比如我们得到一个姓名的首字母:")]),t._m(63),s("p",[t._v("where 还可以定义函数。")]),t._m(64),s("p",[t._v("let 关键字")]),t._m(65),t._m(66),s("p",[t._v("或定义局部函数；")]),t._m(67),s("p",[t._v("case expressions")]),s("p",[t._v("case 也是表达式。可以对变量的不同情况分别求值，还可以使用模式匹配。模式匹配不过是 case 语句的语法糖而已。模式匹配只能在定义函数时使用，而 case 表达式可以用在任何地方。")]),s("p",[t._v("比如我们的阶乘函数。")]),t._m(68),s("p",[t._v("case 的语法：")]),t._m(69),t._m(70),s("p",[t._v("递归在 Haskell 非常重要：Haskell 中没有 while 或 for 循环。因为命令式语言倾向于提供求解的步骤，haskell 更倾向于提供问题的描述。")]),s("p",[t._v("固定的模式是：先定义一个边界条件，再定义个函数，让它从一堆元素中取一个并做点事情后，把余下的重新交给这个函数。")]),s("p",[t._v("再者就是边界条件：一般而言，处理 List 时的边界大部分都是空 List；而处理 Tree 时的边界条件就是没有子元素的节点；处理数字的时候也很一致，一般是寻找幺元作为边界条件。")]),t._m(71),s("p",[t._v("curry 柯里化")]),s("p",[t._v("Haskell 所有多参数的函数都是 curried function。")]),t._m(72),s("p",[t._v("以上两者是等价的。我们看一下 max 的类型：")]),t._m(73),t._m(74),s("p",[t._v("中缀函数也可以使用 curry。")]),t._m(75),s("p",[t._v("将函数作为参数传递")]),s("p",[t._v("比如下面这个例子：")]),t._m(76),s("p",[t._v("注意类型，括号里的表明：首个参数是个类型和返回值都为 a 的函数。")]),t._m(77),t._m(78),t._m(79),t._m(80),s("p",[t._v("map 和 filter")]),s("p",[t._v("map 的定义：")]),t._m(81),t._m(82),s("p",[t._v("filter 的定义：")]),t._m(83),s("p",[t._v("同理，filter 也可以用 List Comprehension 的限制条件来做。")]),t._m(84),s("p",[t._v("举个例子：找到所有小于 10000 且为奇数的平方的和。我们这么写：")]),t._m(85),t._m(86),s("p",[t._v("lambda")]),s("p",[t._v("lambda 就是匿名函数。有时候我们需要传给高端函数一个只会使用一次的函数，就可以搞一个特定功能的 lambda。形式是：")]),t._m(87),t._m(88),t._m(89),s("p",[t._v("关键字 fold")]),t._m(90),s("p",[t._v("Haskell 引入一组函数来使之简化，也就是 fold (类似于 javascript 中的 reduce)。")]),t._m(91),t._m(92),s("p",[t._v("初始值为 0。")]),t._m(93),t._m(94),t._m(95),t._m(96),s("p",[t._v("有 $ 函数的函数调用")]),s("p",[t._v("定义如下：")]),t._m(97),t._m(98),t._m(99),s("p",[t._v("函数组合")]),s("p",[t._v("函数组合的定义如下：")]),t._m(100),s("p",[t._v("第一个用户就是生成新函数，并传递给其他函数。")]),s("p",[t._v("比如，我们想要将一组数字组成的 List 全部转换为 负数。即元素取绝对值，再取负数。我们用 map 完成。")]),t._m(101),s("p",[t._v("如果我们用函数组合。")]),t._m(102),s("p",[t._v("明白了吗。函数组合与 map 和 lamdma 何其相似。还要一点要注意：函数组合是右结合的。")]),s("p",[t._v("如果有多个参数怎么办呢？")]),t._m(103),t._m(104),s("p",[t._v("函数组合的另一个用处是定义 point free style (也称作 pointless style) 的函数。")]),t._m(105),t._m(106),s("p",[t._v("装载和创建模块分别是通过 import 和 module 来实现的。")]),t._m(107),t._m(108),s("p",[t._v("或只装载模块的某几个函数。")]),t._m(109),s("p",[t._v("也可以装载除某个函数之外的其他函数，这可以避免命名冲突。")]),t._m(110),t._m(111),t._m(112),t._m(113),s("p",[s("a",{attrs:{href:"https://www.haskell.org/hoogle/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Hoogle"),s("OutboundLink")],1)]),s("p",[t._v("创建自己的模块")]),t._m(114),t._m(115),s("p",[t._v("可以看一下 Haskell Bool 的定义。")]),t._m(116),t._m(117),s("p",[t._v("类型名和 value constructor 都需要大写。")]),s("p",[t._v("假设我们要定义个 Shape。假定是个圆或者长方形。")]),t._m(118),s("p",[t._v("所以，value constructor 本质是个函数。")]),t._m(119),s("p",[t._v("用自定义的类型来写一个函数，求表面积。")]),t._m(120),t._m(121),t._m(122),t._m(123),s("p",[t._v("Recode syntax")]),s("p",[t._v("现在我们来描述一个人，有姓名、年龄、身高、电话号码和爱吃的冰淇淋。")]),t._m(124),s("p",[t._v("造个人：")]),t._m(125),s("p",[t._v("其实我们有更好的方式。")]),t._m(126),t._m(127),t._m(128),s("p",[t._v("Type parameters")]),s("p",[t._v("上面提到的都是 value constructor，没错就是 value：value constructor 取几个参数，然后产生(返回) 一个新 value。")]),s("p",[t._v("type constructor，取类型作为参数，产生新类型。")]),t._m(129),t._m(130),t._m(131),s("p",[t._v("Instance")]),s("p",[t._v("(不要和传统 OOP 概念中类的实例混淆)。Int 类型就是 Eq 类型类中色一个实例。")]),t._m(132),t._m(133),s("p",[t._v("测试一下：")]),t._m(134),s("p",[t._v("同理，Person 也可以将其应用到所有在类型声明中用到了 Eq 类约束的函数，比如 elem。")]),t._m(135),s("p",[t._v("Type synonyms")]),s("p",[t._v("在写类型名的时候，[Char] 和 String 等价，可以互换。这就是类型别名 - 就是个不用的名字而已。")]),t._m(136),s("p",[t._v("类型别名也可以有参数。")]),t._m(137),s("p",[t._v("创建 Typeclasss")]),s("p",[t._v("Typeclass 的目的之一就是抽象化操作。比如，如果我们 Person 类型不 driving (Eq)，就需要自己写函数来实现相等性。")]),t._m(138),s("p",[t._v("这样我们倒不如定义个 Typeclass。")]),t._m(139),t._m(140),s("p",[t._v("然后，我们打算手动(而不是通过 driving (Eq) 的方式)创建一个 Instance。定义类型如下：")]),t._m(141),t._m(142),s("p",[t._v("定义 typeclass 的 subclass")]),s("p",[t._v("比如：")]),t._m(143),t._m(144),s("p",[t._v("Maybe 怎么办呢。特别之处在于它是一个 type constructor。单 Maybe a 是一个确切地类型。")]),t._m(145),s("p",[t._v("不过仍然有个问题，是我们无法保证 Maybe 里面装的可以进行 Eq，所以需要加上限制。")]),t._m(146),t._m(147),t._m(148),s("p",[t._v("yes-no typeclass")]),t._m(149),s("p",[t._v("先声明一个 typeclass。")]),t._m(150),s("p",[t._v("接下来定义一些 instance。")]),s("p",[t._v("数字。")]),t._m(151),s("p",[t._v("布尔。")]),t._m(152),s("p",[t._v("让 Maybe 也称为 YesNo 的 Instance")]),t._m(153),s("p",[t._v("Functor typeclass")]),s("p",[t._v("Functor typeclass 基本上可以代表可以被 map 的东西。比如 List，是的，List 就属于 Functor typeclass。")]),t._m(154),t._m(155),t._m(156),s("p",[t._v("我们来看一下针对 List 实现的 map。")]),t._m(157),t._m(158),t._m(159),s("p",[t._v("比如 Maybe type constructor，也可以表现得像个盒子。可能什么都没有，就是 Nothing；或者装了个东西。")]),t._m(160),s("p",[t._v("Kind - 类型的类型")]),t._m(161),t._m(162),t._m(163),s("p",[t._v("Maybe 就不一样了。")]),t._m(164),t._m(165),t._m(166),s("p",[t._v("那 Either 呢。")]),t._m(167),s("p",[t._v("这告诉我们 Either 接受两个具体类型作为参数，并构造出一个具体类型。他看起来也像是一个接受两个参数并回传值的函数类型。类型构造子是可以做 curry 的，所以我们也能 partially apply。")]),t._m(168),s("p",[t._v("和输入输出设备交互是一个不纯的操作。")]),s("p",[t._v("Hello World")]),t._m(169),s("p",[t._v("编译这个程序的方式，有很多。其中一种是：")]),t._m(170),s("p",[t._v("还可以不使用 REPL，直接在终端运行。")]),t._m(171),s("p",[t._v("复杂一点的例子")]),t._m(172),s("p",[t._v("看一下各自的形态吧。")]),t._m(173),t._m(174),s("p",[t._v("看一个更复杂一点的例子：")]),t._m(175),t._m(176),s("p",[t._v("模块 Control.Monad")]),s("p",[t._v("模块 Control.Monad 提供了一些能够处理 IO action 的函数。")]),t._m(177),s("p",[t._v("文件和字符流")]),s("p",[t._v("比如我们有一个文件 baby.txt")]),t._m(178),s("p",[t._v("我们如何处理这个文件呢。")]),t._m(179),s("p",[t._v("编译文件，然后")]),t._m(180),s("p",[t._v("有一点：")]),t._m(181),t._m(182),s("p",[t._v("在 haskell 中，Functor 是一元 type constructor。 属于 Functor typeclass 的 instance，并且满足 functor law。")]),s("p",[t._v("提到的 Maybe、[]、Either a 都是 functor。")]),s("p",[t._v("其次，IO action 也是 functor。")]),s("p",[t._v("Applicative functors")]),s("p",[t._v("当我们对 functor map over 一个函数时，用的函数都只接受一个参数。但如果函数接受两个参数呢。")]),t._m(183),t._m(184),s("p",[t._v("之后，我们需要用一个能 “吃” (这个包在 Just 中的函数) 的函数来 map over 这个 functor。")]),t._m(185),s("p",[t._v("applicative functors 在 Haskell 中是用在 Control.Applicative 中的 Applicative 这个 typeclass 来定义的。")]),t._m(186),t._m(187),s("p",[t._v("我们可以看一下 Maybe 的 Applicative 的实现。")]),t._m(188),s("p",[t._v("关键字 newtype")]),t._m(189),s("p",[t._v("当我们谈到 Functor，抽象概念是代表一种可以被 map over 的值。")]),s("p",[t._v("Applicative Functor 代表一种带有 context 的型态，可以用函数操作它而且同时保有他的 context。")]),s("p",[t._v("Monad 是一个从 Applicative Functor 演进的过程：如果你有一个具有 context 的值 m a，如果把他丢进一个只接受普通值 a 的函数中，并回传一个具有 context 的值。如：")]),t._m(190),t._m(191),s("p",[t._v("Maybe Monad")]),s("p",[t._v('一个 Maybe a 的类型表明 a 的值具备一个可能造成错误的的 context。而 Just "dharma" 的值代表他不是一个 "dharma" 的字符串就是字符串不见时的 Nothing。如果你把字符串当作计算的结果，Nothing 就代表计算失败了。')]),s("p",[t._v("Monad type class")]),t._m(192),t._m(193),s("p",[t._v("看一下 Maybe 的 Monad instance。")]),t._m(194),t._m(195),s("p",[t._v("Monoids (幺半群)")]),s("p",[t._v("我们来看一些操作：")]),t._m(196),t._m(197),s("p",[t._v("在 haskell 中，monoid 的 typeclass 定义如下：")]),t._m(198),s("p",[t._v("Lists 是 monoid - 空的 List 可以看成是 identity element。")]),t._m(199)])},[function(){var t=this.$createElement,a=this._self._c||t;return a("h1",{attrs:{id:"real-world-haskell"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#real-world-haskell","aria-hidden":"true"}},[this._v("#")]),this._v(" Real World Haskell")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"环境配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#环境配置","aria-hidden":"true"}},[this._v("#")]),this._v(" 环境配置")])},function(){var t=this.$createElement,a=this._self._c||t;return a("ol",[a("li",[this._v("编程环境")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("ol",{attrs:{start:"2"}},[a("li",[this._v("REPL")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("ul",[a("li",[this._v("进入界面 "),a("code",[this._v("$ ghci")])]),a("li",[this._v("退出界面 ctrl + D")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("ol",{attrs:{start:"3"}},[a("li",[this._v("加载模块")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ul",[s("li",[s("code",[t._v("Prelude")]),t._v(" - 序幕。默认的模块")]),s("li",[t._v("加载其他模块 - "),s("code",[t._v(":module + [模块名]")]),t._v("。缩写为: "),s("code",[t._v(":m + [模块名]")])]),s("li",[t._v("替代默认的提示符 - "),s("code",[t._v(':set prompt "ghci>"')])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据","aria-hidden":"true"}},[this._v("#")]),this._v(" 数据")])},function(){var t=this.$createElement,a=this._self._c||t;return a("ol",[a("li",[this._v("简单的运算")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[this._v("ghci"),a("span",{attrs:{class:"token operator"}},[this._v(">")]),this._v(" 2 * 3\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("都是函数。"),a("code",[this._v("*")]),this._v(" 是一个两数相乘的函数，是一个 “中缀函数”。其他大多数不能和数夹在一起则称为 “前缀函数”。")])},function(){var t=this.$createElement,a=this._self._c||t;return a("ol",{attrs:{start:"2"}},[a("li",[this._v("布尔")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[a("code",[this._v("True")]),this._v(" 和 "),a("code",[this._v("False")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("ol",{attrs:{start:"3"}},[a("li",[this._v("Lists")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ul",[s("li",[t._v("[1,2,3] - 是 1:2:3:[] 的语法糖")]),s("li",[t._v("[1..5] 变成 [1,2,3,4,5]， "),s("code",[t._v("..")]),t._v(" 是 enumeration notation。这种方式也叫做 Range")]),s("li",[t._v("[1,3..8] 变成 [1,3,5,7]")]),s("li",[t._v("[1..] 生成一个无限列表")]),s("li",[t._v("1 : [2,3] 用于添加一个元素列表的头部。读作 "),s("code",[t._v("cons")]),t._v("(construct)")]),s("li",[t._v("[1,2] ++ [3,4] 用于连接两个列表")]),s("li",[s("code",[t._v(">")]),t._v(" 和 "),s("code",[t._v(">=")]),t._v(" 可以比较 List 的大小")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("ghci"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("3,2,1"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("2, 10, 5"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nTrue\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("ul",[a("li",[this._v("head - 返回首元素")]),a("li",[this._v("tail - 尾部，除去首元素的部分")]),a("li",[this._v("last - 返回尾元素")]),a("li",[this._v("init - 首部，除去尾元素的部分")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[a("img",{attrs:{src:"https://learnyoua.haskell.sg/content/zh-cn/ch02/listmonster.png",alt:""}})])},function(){var t=this.$createElement,a=this._self._c||t;return a("ul",[a("li",[this._v("length - List 长度")]),a("li",[this._v("null - 检查是否为空")]),a("li",[this._v("reverse - 反转")]),a("li",[this._v("take - 返回前几个元素")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("ghci"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" take 3 "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("1,2,4,5"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("1,2,4"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("ul",[a("li",[this._v("drop - 删除前几个元素")]),a("li",[this._v("maximum - 返回最大的那个")]),a("li",[this._v("minimun - 返回最小的那个")]),a("li",[this._v("sum - 返回所有元素的和")]),a("li",[this._v("product - 返回所有元素的积")]),a("li",[this._v("elem - 判断一个元素是否存在。“中缀函数”")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("ghci"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" 4 "),s("span",{attrs:{class:"token variable"}},[s("span",{attrs:{class:"token variable"}},[t._v("`")]),t._v("elem"),s("span",{attrs:{class:"token variable"}},[t._v("`")])]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("1,2,4,5"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nTrue\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("ul",[a("li",[this._v("[1..]")]),a("li",[this._v("cycle 函数 "),a("code",[this._v("cycle [1,2,3]")])]),a("li",[this._v("repeat 函数 "),a("code",[this._v("repeat 5")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("ghci"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" take 10 "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cycle "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("1,2,3"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("1,2,3,1,2,3,1,2,3,1"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("Set Comprehension(集合的表示法) 的应用。限制条件(predicate) 由 "),a("code",[this._v(",")]),this._v(" 分隔。")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("ghci"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("x*2 "),s("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" x "),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("- "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("1"),s("span",{attrs:{class:"token punctuation"}},[t._v("..")]),t._v("4"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("2,4,6,8"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nghci"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("x*2 "),s("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" x "),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("- "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("1"),s("span",{attrs:{class:"token punctuation"}},[t._v("..")]),t._v("10"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", x*2 "),s("span",{attrs:{class:"token operator"}},[t._v(">=")]),t._v(" 12"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("12,14,16,18,20"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nghci"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" x*y "),s("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" x "),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("- "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("2,5,10"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", y "),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("- "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("8,10,11"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("16,20,22,40,50,55,80,100,110"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("len' xs "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("sum")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("1 "),s("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" _ "),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("- xs "),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[a("code",[this._v("_")]),this._v(" 意思是说，不关心从 "),a("code",[this._v("xs")]),this._v(" 取什么值。")])},function(){var t=this.$createElement,a=this._self._c||t;return a("ol",{attrs:{start:"4"}},[a("li",[this._v("Tuple")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("形如："),a("code",[this._v("(1,2)")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ul",[s("li",[t._v("括号括起来，逗号分隔开")]),s("li",[s("em",[t._v("元")]),t._v(" 可以保存多种类型，元组内的所有 "),s("code",[t._v("元")]),t._v(" 类型必须一一对应")]),s("li",[t._v("每个不同长度的 Tuple 都是独立的类型")]),s("li",[t._v("长度为 2 的 Tuple 也称为 序对(Pair)")]),s("li",[t._v("没有单元素的 Tuple")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("ul",[a("li",[this._v("fst - 返回 序对 的首项")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("ghci"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" fst "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"Wow"')]),t._v(",False"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nFalse\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("ul",[a("li",[this._v("snd - 返回 序对 的尾项")]),a("li",[this._v("zip - 用来生成一组 序对 的 List")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("ghci"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("zip")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("1"),s("span",{attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token string"}},[t._v('"one"')]),t._v(", "),s("span",{attrs:{class:"token string"}},[t._v('"two"')]),t._v(", "),s("span",{attrs:{class:"token string"}},[t._v('"three"')]),t._v(", "),s("span",{attrs:{class:"token string"}},[t._v('"four"')]),t._v(", "),s("span",{attrs:{class:"token string"}},[t._v('"five"')]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("1,"),s("span",{attrs:{class:"token string"}},[t._v('"one"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(","),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("2,"),s("span",{attrs:{class:"token string"}},[t._v('"two"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(","),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("3,"),s("span",{attrs:{class:"token string"}},[t._v('"three"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(","),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("4,"),s("span",{attrs:{class:"token string"}},[t._v('"four"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(","),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("5,"),s("span",{attrs:{class:"token string"}},[t._v('"five"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("ol",{attrs:{start:"5"}},[a("li",[this._v("字符串和字符")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ul",[s("li",[t._v("Haskell 区分字符串和字符 "),s("code",[t._v('""')]),t._v(" for 字符串；"),s("code",[t._v("''")]),t._v(" for 字符。")]),s("li",[s("code",[t._v('""')]),t._v(" 表示空串，"),s("code",[t._v('"" == []')]),t._v(" 为 True")]),s("li",[t._v("同 Lists 的 "),s("code",[t._v(":")]),t._v(" 和 "),s("code",[t._v("++")])]),s("li",[t._v("\"Hello\" 只是 ['h','e','l','l','o'] 的语法糖")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型","aria-hidden":"true"}},[this._v("#")]),this._v(" 类型")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ol",[s("li",[s("p",[t._v("在 Haskell 中，所有类型都是 "),s("em",[t._v("大写字母")]),t._v(" 开头，所有的变量名字都已 "),s("em",[t._v("小写字母")]),t._v(" 开头。")])]),s("li",[s("p",[t._v("在 REPL 查看类型 "),s("code",[t._v(":set +t")]),t._v("；取消查看 "),s("code",[t._v(":unset +t")])])]),s("li",[s("p",[t._v("还可以用 "),s("code",[t._v(":type")]),t._v("。用法 "),s("code",[t._v(":type 'a'")])])]),s("li",[s("p",[s("code",[t._v("it")]),t._v(" 是个特殊的变量，ghci 将最近一次求值所得的结果保存在这个变量里。")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token hvariable"}},[t._v("addThree")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Int")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Int")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Int")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Int")]),t._v("\n"),s("span",{attrs:{class:"token hvariable"}},[t._v("addThree")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("y")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("z")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("y")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("z")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("ul",[a("li",[this._v("Int - 整型，有上界和下界的那种")]),a("li",[this._v("Integer - 整数，可以存放非常大的数。")]),a("li",[this._v("Float - 单精度浮点数")]),a("li",[this._v("Double - 双精度浮点数")]),a("li",[this._v("Bool - 布尔值")]),a("li",[this._v("Char - 字符")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("ghci"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" :t "),s("span",{attrs:{class:"token function"}},[t._v("head")]),t._v("\n"),s("span",{attrs:{class:"token function"}},[t._v("head")]),t._v(" :: "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("a"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" -"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" a\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[a("code",[this._v("a")]),this._v(" 是一个类型变量，也就是说 "),a("code",[this._v("a")]),this._v(" 是任何类型。使用到类型变量的函数别称为 “多态函数”。")])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("比如，"),a("code",[this._v("==")]),this._v(" 的函数声明：")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("ghci"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" :t "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token operator"}},[t._v("==")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token operator"}},[t._v("==")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" :: "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Eq a"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" a -"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" a -"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" Bool\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[a("code",[this._v("=>")]),this._v(" 左边的是类型约束。表示这两个参数的类型同在 Eq 类之中。Eq 这一 Typeclass 提供了判断相等性的接口。")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ul",[s("li",[t._v("Eq 包含可判断相等性的类型。只要一个函数有 Eq 类的限制，那么它就必定在定义中用到了 "),s("code",[t._v("==")]),t._v(" 和 "),s("code",[t._v("/=")]),t._v("。")]),s("li",[t._v("Ord 包含可比较大小的类型。类型若要称为 Ord 的成员，必先加入 Eq 家族。")]),s("li",[t._v("Show 的成员可用字符串表示的类型。操作 Show Typeclass，最常用的函数表示 "),s("code",[t._v("show")]),t._v("。")]),s("li",[t._v("Read 是与 Show 相反的 Typeclass。read 函数可以将一个字符串转为 Read 的某成员类型。")]),s("li",[t._v("Enum 的成员都是连续的类型，即可枚举。包含的类型有： ()、Bool、Char、Ordering、Int、Integer、Float 和 Double。")]),s("li",[t._v("Bounded 的成员都有一个上限和下限。")]),s("li",[t._v("Num 表示数字的 TypeClass，成员类型都具有数字的特征。")]),s("li",[t._v("Integral 同样表示数字的 TypeClass。Num 包含所有的数字；而 Integral 仅包含整数。其成员类型有 Int 和 Integer。")]),s("li",[t._v("Floating 仅包含浮点类型：Float 和 Double。")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数","aria-hidden":"true"}},[this._v("#")]),this._v(" 函数")])},function(){var t=this.$createElement,a=this._self._c||t;return a("ol",[a("li",[this._v("函数调用的形式")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("ol",{attrs:{start:"2"}},[a("li",[this._v("函数的声明")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token operator"}},[t._v("//")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("baby")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token hvariable"}},[t._v("haskell")]),t._v("\n"),s("span",{attrs:{class:"token hvariable"}},[t._v("doubleMe")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("在 REPL 装载："),a("code",[this._v(":l baby.haskell")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("ol",{attrs:{start:"3"}},[a("li",[a("p",[this._v("函数一定要返回一个结果")])]),a("li",[a("p",[this._v("函数名首字母小写")])]),a("li",[a("p",[this._v("没有参数的函数通常称为 定义 或 名字")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token hvariable"}},[t._v("factorial")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token constant"}},[t._v("Integral")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v("\n"),s("span",{attrs:{class:"token hvariable"}},[t._v("factorial")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{attrs:{class:"token hvariable"}},[t._v("factorial")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("n")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("n")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("factorial")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("n")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token hvariable"}},[t._v("addVectors")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token constant"}},[t._v("Num")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{attrs:{class:"token hvariable"}},[t._v("addVectors")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("x1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("y1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("x2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("y2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("x1")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("y1")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("y2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("比如 "),a("code",[this._v("x:xs")]),this._v(" 匹配的就是 List 的头部绑定为 x，除头部以外的部分绑定为 xs。")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token hvariable"}},[t._v("len")]),t._v("' "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token constant"}},[t._v("Num")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("b")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("b")]),t._v("\n"),s("span",{attrs:{class:"token hvariable"}},[t._v("len")]),t._v("' "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),s("span",{attrs:{class:"token hvariable"}},[t._v("len")]),t._v("' "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("_")]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),s("span",{attrs:{class:"token hvariable"}},[t._v("xs")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("len")]),t._v("' "),s("span",{attrs:{class:"token hvariable"}},[t._v("xs")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token hvariable"}},[t._v("capital")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("String")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("String")]),t._v("\n"),s("span",{attrs:{class:"token hvariable"}},[t._v("capital")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('""')]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"Empty string, whoops"')]),t._v("\n"),s("span",{attrs:{class:"token hvariable"}},[t._v("captial")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("all")]),s("span",{attrs:{class:"token operator"}},[t._v("@")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),s("span",{attrs:{class:"token hvariable"}},[t._v("xs")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"The first letter of "')]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("all")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('" is "')]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token hvariable"}},[t._v("bmiTell")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token constant"}},[t._v("RealFloat")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("String")]),t._v("\n"),s("span",{attrs:{class:"token hvariable"}},[t._v("bmiTell")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("bmi")]),t._v("\n    "),s("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("bmi")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("18.5")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"You\'re underweight, you emo, you!"')]),t._v("\n    "),s("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("bmi")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("25.0")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("\"You're supposedly normal. Pffft, I bet you're ugly!\"")]),t._v("\n    "),s("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("bmi")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("30.0")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"You\'re fat! Lose some weight, fatty!"')]),t._v("\n    "),s("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("otherwise")]),t._v("   "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"You\'re a whale, congratulations!"')]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("非常像好多 if 语句，只不过放在了 "),a("code",[this._v("=")]),this._v(" 的前面。")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token builtin"}},[t._v("max")]),t._v("' "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token constant"}},[t._v("Ord")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v("\n"),s("span",{attrs:{class:"token builtin"}},[t._v("max")]),t._v("' "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("b")]),t._v("\n    "),s("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("b")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("     "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v("\n    "),s("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("otherwise")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("b")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token hvariable"}},[t._v("bmiTell")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token constant"}},[t._v("RealFloat")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("String")]),t._v("\n"),s("span",{attrs:{class:"token hvariable"}},[t._v("bmiTell")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("bmi")]),t._v("\n    "),s("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("bmi")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("skinny")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"You\'re underweight, you emo, you!"')]),t._v("\n    "),s("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("bmi")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("normal")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("\"You're supposedly normal. Pffft, I bet you're ugly!\"")]),t._v("\n    "),s("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("bmi")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("fat")]),t._v("    "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"You\'re fat! Lose some weight, fatty!"')]),t._v("\n    "),s("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("otherwise")]),t._v("     "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"You\'re a whale, congratulations!"')]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("skinny")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("18.5")]),t._v("\n          "),s("span",{attrs:{class:"token hvariable"}},[t._v("normal")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("25.0")]),t._v("\n          "),s("span",{attrs:{class:"token hvariable"}},[t._v("fat")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("30.0")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token hvariable"}},[t._v("bmiTell")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token constant"}},[t._v("RealFloat")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("String")]),t._v("\n"),s("span",{attrs:{class:"token hvariable"}},[t._v("bmiTell")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("bmi")]),t._v("\n    "),s("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("bmi")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("skinny")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"You\'re underweight, you emo, you!"')]),t._v("\n    "),s("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("bmi")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("normal")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("\"You're supposedly normal. Pffft, I bet you're ugly!\"")]),t._v("\n    "),s("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("bmi")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("fat")]),t._v("    "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"You\'re fat! Lose some weight, fatty!"')]),t._v("\n    "),s("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("otherwise")]),t._v("     "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"You\'re a whale, congratulations!"')]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("skinny")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("normal")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("fat")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("18.5")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("25.0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("30.0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token hvariable"}},[t._v("initials")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("String")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("String")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("String")]),t._v("\n"),s("span",{attrs:{class:"token hvariable"}},[t._v("initials")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("firstname")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("lastname")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token hvariable"}},[t._v("f")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('". "')]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token hvariable"}},[t._v("l")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"."')]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("f")]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),s("span",{attrs:{class:"token hvariable"}},[t._v("_")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("firstname")]),t._v("\n          "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("l")]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),s("span",{attrs:{class:"token hvariable"}},[t._v("_")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("lastname")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token hvariable"}},[t._v("calcBmis")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token constant"}},[t._v("RealFloat")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{attrs:{class:"token hvariable"}},[t._v("calcBmis")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("xs")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token hvariable"}},[t._v("bmi")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("w")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("h")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("w")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("h")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("<-")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("xs")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("bmi")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("weight")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("height")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("weight")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("height")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("^")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("let 的使用方式是 "),a("code",[this._v("let [bindings] in [expressions]")]),this._v("。let 绑定是个表达式，允许你在任何位置定义局部变量。")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token hvariable"}},[t._v("cylinder")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token constant"}},[t._v("RealFloat")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v("\n"),s("span",{attrs:{class:"token hvariable"}},[t._v("cylinder")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("r")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("h")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("sideArea")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("pi")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("r")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("h")]),t._v("\n        "),s("span",{attrs:{class:"token hvariable"}},[t._v("topArea")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("pi")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("r")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("^")]),s("span",{attrs:{class:"token number"}},[t._v("2")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v("  "),s("span",{attrs:{class:"token hvariable"}},[t._v("sideArea")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("topArea")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token hvariable"}},[t._v("ghci")]),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("square")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("square")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("5")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("square")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("3")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("square")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("25")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("9")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("4")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token hvariable"}},[t._v("factorial")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token constant"}},[t._v("Integral")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v("\n"),s("span",{attrs:{class:"token hvariable"}},[t._v("factorial")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("n")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("n")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("of")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("\n                        "),s("span",{attrs:{class:"token hvariable"}},[t._v("_")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("n")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("factorial")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("n")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[this._v("case expression of pattern -> result\n                   pattern -> result\n                   pattern -> result\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"递归"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#递归","aria-hidden":"true"}},[this._v("#")]),this._v(" 递归")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"高阶函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#高阶函数","aria-hidden":"true"}},[this._v("#")]),this._v(" 高阶函数")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("ghci"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" max 4 5\n5\nghci"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("max 4"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 5\n5\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("ghci"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" :t max\nmax :: Ord a "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" a -"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" a -"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" a\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("实际上也可以写作："),a("code",[this._v("max :: Ord a => a -> (a -> a)")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token hvariable"}},[t._v("divideByTen")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token constant"}},[t._v("Floating")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v("\n"),s("span",{attrs:{class:"token hvariable"}},[t._v("divideByTen")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token operator"}},[t._v("/")]),s("span",{attrs:{class:"token number"}},[t._v("10")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token hvariable"}},[t._v("applyTwice")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v("\n"),s("span",{attrs:{class:"token hvariable"}},[t._v("applyTwice")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("f")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("f")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("f")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("再来看一个函数。"),a("code",[this._v("flip")]),this._v(" 只是简单地将函数的两个参数颠倒一下。")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token builtin"}},[t._v("flip")]),t._v("' "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("b")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("c")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("b")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("c")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{attrs:{class:"token builtin"}},[t._v("flip")]),t._v("' "),s("span",{attrs:{class:"token hvariable"}},[t._v("f")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("g")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("g")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("y")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("f")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("y")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("由于函数默认都是柯里化的，"),a("code",[this._v("->")]),this._v(" 是右结合，所以第二对括号是没有必要的(范畴论)。因此可以改成更为简单的写法。")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token builtin"}},[t._v("flip")]),t._v("' "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("b")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("c")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("b")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("c")]),t._v("\n"),s("span",{attrs:{class:"token builtin"}},[t._v("flip")]),t._v("' "),s("span",{attrs:{class:"token hvariable"}},[t._v("f")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("y")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("f")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("y")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token builtin"}},[t._v("map")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("b")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token hvariable"}},[t._v("b")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{attrs:{class:"token builtin"}},[t._v("map")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("_")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{attrs:{class:"token builtin"}},[t._v("map")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("f")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),s("span",{attrs:{class:"token hvariable"}},[t._v("xs")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("f")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("map")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("f")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("xs")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("最终你会发现，map 完全可以用 List Comprehension 取代。"),a("code",[this._v("map (+3) [1,2]")]),this._v(" 和 "),a("code",[this._v("[x+3 | x <- [1, 2]]")]),this._v(" 等价。")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token builtin"}},[t._v("filter")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Bool")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{attrs:{class:"token builtin"}},[t._v("filter")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("_")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{attrs:{class:"token builtin"}},[t._v("filter")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("p")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),s("span",{attrs:{class:"token hvariable"}},[t._v("xs")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("p")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),t._v("       "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("filter")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("p")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("xs")]),t._v("\n    "),s("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("otherwise")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("filter")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("p")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("xs")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[a("code",[this._v("filter")]),this._v(" 和 "),a("code",[this._v("map")]),this._v(" 都是惰性的。")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("ghci"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("sum")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("takeWhile "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("10000"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filter odd "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("map "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("^2"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("1"),s("span",{attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v("))")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n166650\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("如果 "),a("code",[this._v("map")]),this._v(" 不是惰性的，恐怕我们的程序就得宕机了。")])},function(){var t=this.$createElement,a=this._self._c||t;return a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[this._v("(\\ 空号分隔的参数 -> 函数行为)\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token hvariable"}},[t._v("numLongChains")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Int")]),t._v("\n"),s("span",{attrs:{class:"token hvariable"}},[t._v("numLongChains")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("length")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token builtin"}},[t._v("filter")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token operator"}},[t._v("\\")]),s("span",{attrs:{class:"token hvariable"}},[t._v("xs")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("length")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("xs")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("15")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token builtin"}},[t._v("map")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("chain")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token operator"}},[t._v("..")]),s("span",{attrs:{class:"token number"}},[t._v("100")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("lambda 是个表达式，因此我们可以任意传递。表达式 "),a("code",[this._v("(filter (\\xs -> length xs > 15)")]),this._v(" 返回一个函数，判断 List 的长度是否大于 15。")])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("回到最初学习递归的情景，有一个处理 List 的模式非常常见：将边界条件设为空 List，再引入 "),a("code",[this._v("(x:xs)")]),this._v(" 模式，对单个元素和余下的 List 做些事情。")])},function(){var t=this.$createElement,a=this._self._c||t;return a("ul",[a("li",[this._v("foldl - 左折叠")]),a("li",[this._v("foldr - 右折叠")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token builtin"}},[t._v("sum")]),t._v("' "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token constant"}},[t._v("Num")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v("\n"),s("span",{attrs:{class:"token builtin"}},[t._v("sum")]),t._v("' "),s("span",{attrs:{class:"token hvariable"}},[t._v("xs")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("foldl")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token operator"}},[t._v("\\")]),s("span",{attrs:{class:"token hvariable"}},[t._v("acc")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("acc")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("xs")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("考虑到柯里化，即 "),a("code",[this._v("sum()([1,2,3])")]),this._v("，我们还可以简化：")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token builtin"}},[t._v("sum")]),t._v("' "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token constant"}},[t._v("Num")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v("\n"),s("span",{attrs:{class:"token builtin"}},[t._v("sum")]),t._v("' "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("foldl")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token operator"}},[t._v("+")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("ul",[a("li",[a("p",[this._v("foldl1 - 和 foldl 类似，只是无需明确提供初始值，假定 List 的首个元素作为起始值")])]),a("li",[a("p",[this._v("foldr1 - 和 foldr 类似，只是无需明确提供初始值，假定 List 的末尾元素作为起始值")])]),a("li",[a("p",[this._v("scanl 和 scanr 和 foldl 和 foldr 相似，只是它们会记录下累加值的所有状态到一个 List。")])]),a("li",[a("p",[this._v("同理也有 scanl1 和 scanr1")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("ghci"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" scanl "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("+"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 0 "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("3,5,2,1"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token operator"}},[t._v("$")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("b")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("b")]),t._v("\n"),s("span",{attrs:{class:"token hvariable"}},[t._v("f")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("$")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("f")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("也就是说，"),a("code",[this._v("$")]),this._v(" 的优先级最低。作用是：用空格调用的函数调用符是左结合的，比如 f a b c 和 ((f a) b) c 等价，而 "),a("code",[this._v("$")]),this._v(" 是右结合的。")])},function(){var t=this.$createElement,a=this._self._c||t;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[this._v("ghci"),a("span",{attrs:{class:"token operator"}},[this._v(">")]),this._v(" sqrt 3 + 4 + 9\n14.732050807568877\n\nghci"),a("span",{attrs:{class:"token operator"}},[this._v(">")]),this._v(" sqrt $ 3 + 4 + 9\n4.0\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("b")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("c")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("b")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("c")]),t._v("\n"),s("span",{attrs:{class:"token hvariable"}},[t._v("f")]),s("span",{attrs:{class:"token operator"}},[t._v(" . ")]),s("span",{attrs:{class:"token hvariable"}},[t._v("g")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("\\")]),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("f")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("g")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token hvariable"}},[t._v("ghci")]),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("map")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token operator"}},[t._v("\\")]),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("negate")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token builtin"}},[t._v("abs")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token number"}},[t._v("3")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token operator"}},[t._v("-")]),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token operator"}},[t._v("-")]),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token number"}},[t._v("3")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token hvariable"}},[t._v("ghci")]),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("map")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token builtin"}},[t._v("negate")]),s("span",{attrs:{class:"token operator"}},[t._v(" . ")]),s("span",{attrs:{class:"token builtin"}},[t._v("abs")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token number"}},[t._v("3")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token operator"}},[t._v("-")]),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token operator"}},[t._v("-")]),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token builtin"}},[t._v("sum")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token builtin"}},[t._v("replicate")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token builtin"}},[t._v("max")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("6.7")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("8.9")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("可以重写为 "),a("code",[this._v("(sum . replicate 5 . max 6.7) 8.9")]),this._v(" 或 "),a("code",[this._v("sum . replicate 5 . max 6.7 $ 8.9")]),this._v("。")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"module-系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#module-系统","aria-hidden":"true"}},[this._v("#")]),this._v(" module 系统")])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("Haskell 中的模块是含有一组相关的函数，类型和类型类的组合。"),a("code",[this._v("Prelude")]),this._v(" 就是模块。")])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("比如，装载 Data.List 模块。这个模块里的 "),a("code",[this._v("nub")]),this._v(" 函数就可以使用了。")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token import_statement"}},[s("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Data.List")]),t._v("\n\n"),s("span",{attrs:{class:"token hvariable"}},[t._v("numUniques")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token constant"}},[t._v("Eq")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Int")]),t._v("\n"),s("span",{attrs:{class:"token hvariable"}},[t._v("numUniques")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("length")]),s("span",{attrs:{class:"token operator"}},[t._v(" . ")]),s("span",{attrs:{class:"token hvariable"}},[t._v("nub")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token import_statement"}},[s("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Data.List")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("nub")]),t._v("，"),s("span",{attrs:{class:"token builtin"}},[t._v("sort")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token import_statement"}},[s("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Data.List "),s("span",{attrs:{class:"token keyword"}},[t._v("hiding")])]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("nub")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("还有一种命名冲突是这样的，比如在 Data.map 模块中，里面有几个和 Prelude 模块同名的函数，比如 filter 和 null。解决方式是引入 "),a("code",[this._v("qualified import")]),this._v("。")])},function(){var t=this.$createElement,a=this._self._c||t;return a("div",{staticClass:"language-haskell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-haskell"}},[a("code",[a("span",{attrs:{class:"token import_statement"}},[a("span",{attrs:{class:"token keyword"}},[this._v("import")]),this._v(" "),a("span",{attrs:{class:"token keyword"}},[this._v("qualified")]),this._v(" Data.Map "),a("span",{attrs:{class:"token keyword"}},[this._v("as")]),this._v(" M")]),this._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("这就是说，当我们要引用 Data.Map 模块中的 filter 函数时，需要是 "),a("code",[this._v("Data.Map.filter")]),this._v("。或者取个别名 M，"),a("code",[this._v("M.filter")]),this._v("。")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("module")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Geometry")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("sphereVolume")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v("\n\n"),s("span",{attrs:{class:"token hvariable"}},[t._v("sphereVolume")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Float")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Float")]),t._v("\n"),s("span",{attrs:{class:"token hvariable"}},[t._v("sphereVolume")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("radius")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("4.0")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("3.0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("pi")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("radius")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("^")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("3")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"自己的-type-和-typeclass"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自己的-type-和-typeclass","aria-hidden":"true"}},[this._v("#")]),this._v(" 自己的 Type 和 Typeclass")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("data")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Bool")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("False")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("True")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("ul",[a("li",[this._v("data - 表明要定义一个新类型")]),a("li",[this._v("Bool(= 的左边) - type constructor")]),a("li",[this._v("= 右边 - value constructor")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("data")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Shape")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Circle")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Float")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Float")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Float")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Rectangle")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Float")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Float")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Float")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Float")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token hvariable"}},[t._v("ghci")]),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v(":")]),s("span",{attrs:{class:"token hvariable"}},[t._v("t")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Circle")]),t._v("\n"),s("span",{attrs:{class:"token constant"}},[t._v("Circle")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Float")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Float")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Float")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Shape")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token hvariable"}},[t._v("surface")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Shape")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Float")]),t._v("\n"),s("span",{attrs:{class:"token hvariable"}},[t._v("surface")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token constant"}},[t._v("Circle")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("_")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("_")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("r")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("pi")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("r")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("^")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),s("span",{attrs:{class:"token hvariable"}},[t._v("surface")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token constant"}},[t._v("Rectangle")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x1")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("y1")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x2")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("y2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token builtin"}},[t._v("abs")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("$")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x2")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token builtin"}},[t._v("abs")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("$")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("y2")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("y1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("ul",[a("li",[this._v("第一点：Shape 是类型，Circle 并非类型")]),a("li",[this._v("第二点：模式匹配我们针对的都是 value constructor，之前我们匹配的 True, 5, [] 都是无参数的 value constructor。")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("data")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Shape")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Circle")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Float")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Float")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Float")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Rectangle")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Float")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Float")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Float")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Float")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("deriving")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token constant"}},[t._v("Show")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("有了 deriving 关键字，该 Shape 就属于 Show typeclass 中了。调用 "),a("code",[this._v("Circle 10 20 5")]),this._v(" 就不会出错。")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("data")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Person")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Person")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("String")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Int")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Float")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("String")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("String")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("deriving")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token constant"}},[t._v("Show")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("ghci"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" Person "),s("span",{attrs:{class:"token string"}},[t._v('"xiaoke"')]),t._v(" 18 178.4 "),s("span",{attrs:{class:"token string"}},[t._v('"130****3790"')]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"Chocolate"')]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("data")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Person")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Person")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("name")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("String")]),t._v("\n                     "),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("age")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Int")]),t._v("\n                     "),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("height")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Float")]),t._v("\n                     "),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("phoneNumber")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("String")]),t._v("\n                     "),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("flavor")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("String")]),t._v("\n                     "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("deriving")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token constant"}},[t._v("Show")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[this._v("ghci"),a("span",{attrs:{class:"token operator"}},[this._v(">")]),this._v(" :t name\nname :: Person -"),a("span",{attrs:{class:"token operator"}},[this._v(">")]),this._v(" String\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("ul",[a("li",[this._v("有了 {} 号")]),a("li",[this._v("name、age、height 等都是函数")]),a("li",[this._v("这就是 Recode syntax")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("data")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Maybe")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Nothing")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Just")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("ul",[a("li",[this._v("Maybe 是 type constructor。有点类似于 泛型，对具体的类型一无所知")]),a("li",[this._v("a 是类型参数")]),a("li",[this._v("把 Char 交给 May，就可以得到一个 Maybe Char 的类型。Just 'a' 的类型就是 Maybe Char。")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("ghci"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" :t Just 84\nJust 84 :: "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Num t"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" Maybe t\n\nghci"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" :t Nothing\nNothing :: Maybe a\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("比如我们想要对 "),a("em",[this._v("相同的人")]),this._v(" 进行比较：我们就可以直接 driving (Eq)，之后就可以用 == 或 /= 来判断它们是否相等了。否则，就需要自己写函数去来判断。")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("data")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Person")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Person")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("name")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("String")]),t._v("\n                     "),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("age")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Int")]),t._v("\n                     "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("deriving")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token constant"}},[t._v("Eq")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Show")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("ghci"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" xiaoke1 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Person"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"xiaoke"')]),t._v(", age "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" 18"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nghci"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" xiaoke2 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Person"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"xiaoke"')]),t._v(", age "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" 18"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nghci"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" xiaoke1 "),s("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" xiaoke2\nTrue\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("ghci"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" boys "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("xiaoke1, xiaoke2"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nghci"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" xiaoke1 "),s("span",{attrs:{class:"token variable"}},[s("span",{attrs:{class:"token variable"}},[t._v("`")]),t._v("elem"),s("span",{attrs:{class:"token variable"}},[t._v("`")])]),t._v(" boys\nTrue\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("String")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token constant"}},[t._v("Char")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("AssocList")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("k")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("v")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("k")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("v")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("data")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Person")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Person")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("name")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("String")]),t._v("\n                     "),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("age")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Int")]),t._v("\n                     "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token hvariable"}},[t._v("eqPerson")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Person")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Person")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Bool")]),t._v("\n"),s("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Eq")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token operator"}},[t._v("==")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Bool")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token operator"}},[t._v("/=")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Bool")]),t._v("\n    "),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("y")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("not")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("/=")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("y")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("/=")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("y")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("not")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("y")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("ul",[a("li",[this._v("a 是类型变量，是任何我们在定义 instance 时的类型，也不一定要叫 a")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("data")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Color")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Red")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Yellow")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Green")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("instance")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Eq")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Color")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v("\n    "),s("span",{attrs:{class:"token constant"}},[t._v("Red")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Red")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("True")]),t._v("\n    "),s("span",{attrs:{class:"token constant"}},[t._v("Green")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Green")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("True")]),t._v("\n    "),s("span",{attrs:{class:"token constant"}},[t._v("Yellow")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Yellow")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("True")]),t._v("\n    "),s("span",{attrs:{class:"token hvariable"}},[t._v("_")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("_")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("False")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("ul",[a("li",[this._v("instance Eq 即表示 Eq 的实例")]),a("li",[this._v("a 被替换成具体类型 Color")]),a("li",[this._v("由于 == 是用 /= 来定义的，同样的 /= 也是用 == 来定义。所以我们只需要在 instance 定义中复写其中一个就好了")]),a("li",[this._v("这叫 minimal complete definition")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token constant"}},[t._v("Eq")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Num")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v("\n"),s("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("ul",[a("li",[this._v("subclass 的实质是添加 class constraints")]),a("li",[this._v("这里，是为 "),a("code",[this._v("class Num a where")]),this._v(" 中类型变量 a 添加的限制：在某个类型可以被视作 Number 之前，必须先能被比较相不相等")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("instance")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Eq")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token constant"}},[t._v("Maybe")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("m")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v("\n    "),s("span",{attrs:{class:"token constant"}},[t._v("Just")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Just")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("y")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("y")]),t._v("\n    "),s("span",{attrs:{class:"token constant"}},[t._v("Nothing")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Nothing")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("True")]),t._v("\n    "),s("span",{attrs:{class:"token hvariable"}},[t._v("_")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("_")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("False")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("instance")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token constant"}},[t._v("Eq")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("m")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Eq")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token constant"}},[t._v("Maybe")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("m")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v("\n    "),s("span",{attrs:{class:"token constant"}},[t._v("Just")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Just")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("y")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("y")]),t._v("\n    "),s("span",{attrs:{class:"token constant"}},[t._v("Nothing")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Nothing")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("True")]),t._v("\n    "),s("span",{attrs:{class:"token hvariable"}},[t._v("_")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("_")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("False")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("最后一件事，如果你想看看一个 typeclass 定义了哪些 instance。"),a("code",[this._v(":info")]),this._v(" 也可以查找类型和 type constructor 的信息。")])},function(){var t=this.$createElement,a=this._self._c||t;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[this._v("ghci"),a("span",{attrs:{class:"token operator"}},[this._v(">")]),this._v(" :info Num\n\nghci"),a("span",{attrs:{class:"token operator"}},[this._v(">")]),this._v(" :info Maybe\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("这一个 typeclass 是一个这样的来历：对于 JavaScript 这类弱类型的语言而言，"),a("code",[this._v("''")]),this._v("、"),a("code",[this._v("false")]),this._v("、"),a("code",[this._v("0")]),this._v(" 这一类都称为 “假值”，yes-no typeclass 就是模拟这样行为的。")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("YesNo")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v("\n    "),s("span",{attrs:{class:"token hvariable"}},[t._v("yesno")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Bool")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("instance")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("YesNo")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Int")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v("\n    "),s("span",{attrs:{class:"token hvariable"}},[t._v("yesno")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("False")]),t._v("\n    "),s("span",{attrs:{class:"token hvariable"}},[t._v("yesno")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("_")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("True")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("instance")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("YesNo")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Bool")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v("\n    "),s("span",{attrs:{class:"token hvariable"}},[t._v("yesno")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("id")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("instance")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("YesNo")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token constant"}},[t._v("May")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v("\n    "),s("span",{attrs:{class:"token hvariable"}},[t._v("yesno")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token constant"}},[t._v("Just")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("_")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("True")]),t._v("\n    "),s("span",{attrs:{class:"token hvariable"}},[t._v("yesno")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Nothing")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("False")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Functor")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("f")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v("\n    "),s("span",{attrs:{class:"token builtin"}},[t._v("fmap")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("b")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("f")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("f")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("b")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("和之前的稍微有点不一样。之前的 a 是一个类型变量，但我们知道这肯定是个确认的类型。"),a("code",[this._v("f")]),this._v(" 是一个 type constructor，是接收一个类型的函数。")])},function(){var t=this.$createElement,a=this._self._c||t;return a("ul",[a("li",[this._v("fmap 接收一个函数，这个函数从一个类型映射到另一个类型；还接收一个被 functor 应用过的类型；返回一个被 functor 应用过另一个类型。")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("instance")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Functor")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v("\n    "),s("span",{attrs:{class:"token builtin"}},[t._v("fmap")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("map")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("ul",[a("li",[this._v("[] 不能是 [a]，后者是具体的类型；[] 是 type constructor，能构造出 [Int]、[String] 等具体类型")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[a("strong",[this._v("可以当成盒子的类型可能就是一个 functor")]),this._v("。比如 "),a("code",[this._v("[]")]),this._v(" type constructor，就能想象成拥有无限小隔间的盒子：可能全部都是空的；可能部分空；")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("instance")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Functor")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Maybe")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v("\n    "),s("span",{attrs:{class:"token builtin"}},[t._v("fmap")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("f")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token constant"}},[t._v("Just")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Just")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("f")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token builtin"}},[t._v("fmap")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("f")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Nothing")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Nothing")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("p",[t._v("类似于 "),s("code",[t._v("3")]),t._v("、"),s("code",[t._v('"YEAH"')]),t._v("、"),s("code",[t._v("True")]),t._v("(函数也是值的一种) 都有自己的类型。类型就是一个标签。但类型也有自己的标签，也就是类型的类型，就是 kind。"),s("code",[t._v(":k")]),t._v(" 可以得知一个类型的 kind。")])},function(){var t=this.$createElement,a=this._self._c||t;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[this._v("ghci"),a("span",{attrs:{class:"token operator"}},[this._v(">")]),this._v(" :k Int\nInt :: *\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("ul",[a("li",[this._v("就是 Int 类型是 *，表示这个类型是一个具体的类型")]),a("li",[this._v("一个具体类型没有任何类型参数，"),a("strong",[this._v("而值只能属于具体类型")]),this._v("。")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[this._v("ghci"),a("span",{attrs:{class:"token operator"}},[this._v(">")]),this._v(" :k Maybe\nMay :: * -"),a("span",{attrs:{class:"token operator"}},[this._v(">")]),this._v(" *\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("ul",[a("li",[this._v("就是说 Maybe 是类型构造子，接收一个具体类型，然后回传一个具体类型。")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[this._v("ghci"),a("span",{attrs:{class:"token operator"}},[this._v(">")]),this._v(" :k Maybe Int\nMay Int :: *\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[this._v("ghci"),a("span",{attrs:{class:"token operator"}},[this._v(">")]),this._v(" :k Either\nEither :: * -"),a("span",{attrs:{class:"token operator"}},[this._v(">")]),this._v(" * -"),a("span",{attrs:{class:"token operator"}},[this._v(">")]),this._v(" *\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"io"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#io","aria-hidden":"true"}},[this._v("#")]),this._v(" IO")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("-- file: helloworld.hs")]),t._v("\n"),s("span",{attrs:{class:"token hvariable"}},[t._v("main")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("putStrLn")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"Hello World"')]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[this._v("$ runghc helloworld.hs\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[this._v("$ ghc --make helloworld\n$ ./helloworld\nHello World\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token hvariable"}},[t._v("main")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    "),s("span",{attrs:{class:"token builtin"}},[t._v("putStrLn")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"Hello, what\'s your name?"')]),t._v("\n    "),s("span",{attrs:{class:"token hvariable"}},[t._v("name")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("<-")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("getLine")]),t._v("\n    "),s("span",{attrs:{class:"token builtin"}},[t._v("putStrLn")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"Hey "')]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("name")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('", you rock!"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("ghci"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" :t main\nmain :: IO "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nghci"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" :t putStrLn\nputStrLn :: String -"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" IO "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nghci"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" :t putStrLn "),s("span",{attrs:{class:"token string"}},[t._v('"Hello World"')]),t._v("\nputStrLn "),s("span",{attrs:{class:"token string"}},[t._v('"Hello World"')]),t._v(" :: IO "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nghci"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" :type getLine\ngetLine :: IO String\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ul",[s("li",[t._v("putStrLn 接收一个 String，返回一个 IO ()。IO something 类型的所有东西都是一个 IO Action，你可以保存它但是什么都不会发生。")]),s("li",[t._v("() 是一个空的 tuple(或叫 unit 型态)。表明从 putStrLn 没有返回值")]),s("li",[t._v("IO action 都是有副作用的")]),s("li",[t._v("需要理解的是，你在 I/O Action 中运行 I/O Action，并且在那儿调用纯的（非I/O）函数。就是说，IO Action 可以保存一个什么东西，但什么都不会发生。只能有其他 IO Action 运行它。")]),s("li",[t._v("也就是 main。它就是那个顶层 IO action。do 才会运行我们 main 这个 IO action。")]),s("li",[t._v("getLine 看上去就是保存了 IO action，当这个动作运行时会得到一个 String。")]),s("li",[t._v("这样 pure 和 非 pure 的函数就隔离了。")]),s("li",[t._v("只有当你有多于一个动作需要运行的时候才要用到 do。do 代码块的值是最后一个动作执行的结果，而且最后一个 IO action 不能绑定任何名字。")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token hvariable"}},[t._v("main")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    "),s("span",{attrs:{class:"token hvariable"}},[t._v("line")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("<-")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("getLine")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("null")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("line")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("then")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("return")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n            "),s("span",{attrs:{class:"token builtin"}},[t._v("putStrLn")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("$")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("reverseWords")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("line")]),t._v("\n            "),s("span",{attrs:{class:"token hvariable"}},[t._v("main")]),t._v("\n\n"),s("span",{attrs:{class:"token hvariable"}},[t._v("reverseWords")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("String")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("String")]),t._v("\n"),s("span",{attrs:{class:"token hvariable"}},[t._v("reverseWords")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("unwords")]),s("span",{attrs:{class:"token operator"}},[t._v(" . ")]),s("span",{attrs:{class:"token builtin"}},[t._v("map")]),s("span",{attrs:{class:"token operator"}},[t._v(" . ")]),s("span",{attrs:{class:"token builtin"}},[t._v("reverse")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("words")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("ul",[a("li",[this._v("if 在一个 I/O do block 块中，类似于是这样 "),a("code",[this._v("if condition then IO action else IO action")])]),a("li",[this._v("所以 return () 是一个 IO action。return 在 haskell 中完全不一样：意义是使用某个 pure value 造出一个 IO action。"),a("code",[this._v("return 'HA'")]),this._v(" 的类型就是 IO String。通常，可以用 return () 来造出一个没有做任何事情的 IO action")]),a("li",[this._v("在 else 中，由于我们递归地调用了 main(还记得吗，main 也是一个 IO action)。因此需要用到 do。")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("ul",[a("li",[this._v("when - 用在 do block 中，接受一个 Boolean 值和 IO action。用法是将 "),a("code",[this._v("if something then do some I/O action else return ()")]),this._v(" 这样的模式封装起来。")]),a("li",[this._v("forever - 接受一个 IO action 并回传一个永远作同一件事的 IO action。")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[this._v("I'm a xiaoke\nI'm handsome\nhaaaaaaaaaaa\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token import_statement"}},[s("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Data.Char")]),t._v("\n\n"),s("span",{attrs:{class:"token hvariable"}},[t._v("main")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    "),s("span",{attrs:{class:"token hvariable"}},[t._v("contents")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("<-")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("getContents")]),t._v("\n    "),s("span",{attrs:{class:"token builtin"}},[t._v("putStr")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token builtin"}},[t._v("map")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("toUpper")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("contents")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[this._v("$ "),a("span",{attrs:{class:"token function"}},[this._v("cat")]),this._v(" baby.txt "),a("span",{attrs:{class:"token operator"}},[this._v("|")]),this._v(" .toUpperCase\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("ul",[a("li",[this._v("getContents 是 Lazy IO")]),a("li",[a("code",[this._v("foo <- getContents")]),this._v(" 并不会马上读取所有输入，将他们存在 memory 里面")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"functor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#functor","aria-hidden":"true"}},[this._v("#")]),this._v(" Functor")])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("比如 "),a("code",[this._v("fmap(*) (Just 3)")]),this._v(" 的结果是 "),a("code",[this._v("Just(* 3)")]),this._v("，得到了一个包在 Just 中的函数。")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("ghci"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" :t fmap "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("++"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Just 5"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nfmap "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("++"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Just 5"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" :: Num "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("a"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" Maybe "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("a"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" -"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("a"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("ghci"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" fmap "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("*"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("1,2,3,4"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nghci"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" fmap "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\\f -"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" f 9"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" a\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("9,18,27,36"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token constant"}},[t._v("Functor")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("f")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Applicative")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("f")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v("\n    "),s("span",{attrs:{class:"token hvariable"}},[t._v("pure")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("f")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token operator"}},[t._v("<*>")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("f")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("b")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("f")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("f")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("b")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ul",[s("li",[t._v("class contraint 描述了一个 type constructor 是 Applicative，也必须是 Functor。")]),s("li",[t._v("第一个定义是 pure，类型是 "),s("code",[t._v("pure :: a -> f a")]),t._v("。应该要接受一个值，然后回传一个包含那个值的 applicative functor。")]),s("li",[s("code",[t._v("<*>")]),t._v(" 的类型 "),s("code",[t._v("f (a -> b) -> f a -> f b")]),t._v("。"),s("code",[t._v("<*>")]),t._v(" 则是接受一个装有函数的 functor 跟另一个 functor，然后取出第一个 functor 中的函数将它对第二个 functor 中的值做 map。")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("instance")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Applicative")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Maybe")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v("\n    "),s("span",{attrs:{class:"token hvariable"}},[t._v("pure")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Just")]),t._v("\n    "),s("span",{attrs:{class:"token constant"}},[t._v("Nothing")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("<*>")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("_")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Nothing")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token constant"}},[t._v("Just")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("f")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("<*>")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("something")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("fmap")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("f")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("something")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"monad"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#monad","aria-hidden":"true"}},[this._v("#")]),this._v(" monad")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token operator"}},[t._v(">>=")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token constant"}},[t._v("Monad")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("m")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("m")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("m")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("b")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("m")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("b")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("ul",[a("li",[this._v("接受一个 monadic value，以及一个接受普通值得函数，然后回传一个 monadic value")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Monad")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("m")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v("\n    "),s("span",{attrs:{class:"token builtin"}},[t._v("return")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("m")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v("\n\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token operator"}},[t._v(">>=")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("m")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("m")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("b")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("m")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("b")]),t._v("\n\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token operator"}},[t._v(">>")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("m")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("m")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("b")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("m")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("b")]),t._v("\n    "),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("y")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v(">>=")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("\\")]),s("span",{attrs:{class:"token hvariable"}},[t._v("_")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("y")]),t._v("\n\n    "),s("span",{attrs:{class:"token builtin"}},[t._v("fail")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("String")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("m")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),t._v("\n    "),s("span",{attrs:{class:"token builtin"}},[t._v("fail")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("msg")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("error")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("msg")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("ul",[a("li",[this._v("return 等价于 pure，接受一个普通值并放进一个最小的 context 里。")]),a("li",[a("code",[this._v(">>==")]),this._v(" bind 函数，接受一个 monadic value(具有 context 的值)，并且把他喂给一个接受普通值的函数，并回传一个 monadic value。")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("instance")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Monad")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Maybe")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v("\n    "),s("span",{attrs:{class:"token builtin"}},[t._v("return")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Just")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),t._v("\n    "),s("span",{attrs:{class:"token constant"}},[t._v("Nothing")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v(">>=")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("f")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Nothing")]),t._v("\n    "),s("span",{attrs:{class:"token constant"}},[t._v("Just")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v(">>=")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("f")]),t._v("  "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("f")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("x")]),t._v("\n    "),s("span",{attrs:{class:"token builtin"}},[t._v("fail")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("_")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Nothing")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"monoids"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#monoids","aria-hidden":"true"}},[this._v("#")]),this._v(" Monoids")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("ghci"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" 4 * 1\n4\nghci"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" 1 * 9\n9\nghci"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("1,2,3"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" ++ "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("1,2,3"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nghci"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" ++ "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("0.5, 2.5"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("0.5,2.5"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("ul",[a("li",[this._v("函数接受两个参数")]),a("li",[this._v("参数和返回值是同样的类型")]),a("li",[this._v("存在某些值，使用二元函数时不会改变其他值")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Monoid")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("m")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v("\n    "),s("span",{attrs:{class:"token hvariable"}},[t._v("mempty")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("m")]),t._v("\n    "),s("span",{attrs:{class:"token hvariable"}},[t._v("mappend")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("m")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("m")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("m")]),t._v("\n    "),s("span",{attrs:{class:"token hvariable"}},[t._v("mconcat")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token hvariable"}},[t._v("m")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("m")]),t._v("\n    "),s("span",{attrs:{class:"token hvariable"}},[t._v("mconcat")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("foldr")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("mappend")]),t._v(" "),s("span",{attrs:{class:"token hvariable"}},[t._v("mempty")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-haskell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-haskell"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("instance")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("Monoid")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token hvariable"}},[t._v("a")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v("\n    "),s("span",{attrs:{class:"token hvariable"}},[t._v("mempty")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{attrs:{class:"token hvariable"}},[t._v("mappend")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token operator"}},[t._v("++")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])}],!1,null,null,null);a.default=e.exports}}]);