(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{60:function(t,a,s){"use strict";s.r(a);var n=s(0),r=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"json-必知必会"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#json-必知必会","aria-hidden":"true"}},[t._v("#")]),t._v(" JSON 必知必会")]),s("blockquote",[s("p",[t._v("本文部分内容来自 《Introduction to JavaScript Object Notation》，"),s("a",{attrs:{href:"http://www.json.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.json.org/")]),t._v("。")])]),s("p",[t._v("JSON ("),s("strong",[t._v("J")]),t._v("ava"),s("strong",[t._v("S")]),t._v("cript "),s("strong",[t._v("O")]),t._v("bject "),s("strong",[t._v("N")]),t._v("otation)，是一种轻量级的数据交换格式"),s("sup",[s("a",{attrs:{href:"http://www.json.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("来源")])]),t._v("。"),s("strong",[t._v("源于")]),t._v(" JavaScript 的一个子集。但是它"),s("strong",[t._v("独立于")]),t._v("编程语言。JSON 之父是 "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Douglas_Crockford",target:"_blank",rel:"noopener noreferrer"}},[t._v("Douglas Crockford")]),t._v("。")]),s("h2",{attrs:{id:"标准的-json-语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#标准的-json-语法","aria-hidden":"true"}},[t._v("#")]),t._v(" 标准的 JSON 语法")]),s("p",[t._v("JSON 标准语法基于两种结构:")]),s("ul",[s("li",[t._v("name/value pairs")]),s("li",[t._v("ordered list of values，一般就是数组")])]),s("h3",{attrs:{id:"与-javascript-对象的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#与-javascript-对象的区别","aria-hidden":"true"}},[t._v("#")]),t._v(" 与 JavaScript 对象的区别")]),s("p",[t._v("值得注意的是，虽然 JSON 源于 JavaScript 的子集，但是基于目前的发展，有些 JavaScript 对象不是 JSON，有些 JSON 并不是 JavaScript 对象"),s("sup",[s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",target:"_blank",rel:"noopener noreferrer"}},[t._v("来源")])]),t._v("。")]),s("ul",[s("li",[t._v("JSON 属性名称使用双引号，而 JavaScript 对象的属性可以不使用、使用单引号或者双引号。")]),s("li",[t._v("JavaScript 对象中常包含方法(函数)，JSON 不会涉及对象字面量中的函数。")])]),s("h3",{attrs:{id:"json-验证工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#json-验证工具","aria-hidden":"true"}},[t._v("#")]),t._v(" JSON 验证工具")]),s("p",[t._v("下面提供几个 JSON 在线验证的网站：")]),s("ul",[s("li",[s("a",{attrs:{href:"https://jsonformatter.curiousconcept.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("JSON Formatter & Validator")])]),s("li",[s("a",{attrs:{href:"http://jsoneditoronline.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("JSON Editor Online")])])]),s("h3",{attrs:{id:"json-的媒体类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#json-的媒体类型","aria-hidden":"true"}},[t._v("#")]),t._v(" JSON 的媒体类型")]),s("p",[t._v("JSON 的 MIME 类型是 "),s("code",[t._v("application/json")]),t._v("。")]),s("h3",{attrs:{id:"json-的数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#json-的数据类型","aria-hidden":"true"}},[t._v("#")]),t._v(" JSON 的数据类型")]),s("h4",{attrs:{id:"对象数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象数据类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 对象数据类型")]),s("p",[t._v("非常简单，就是花括号包裹的 name/value 对。是一种复合数据类型。")]),s("h4",{attrs:{id:"字符串类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 字符串类型")]),s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token property"}},[t._v('"title"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"xiaoke love yuer"')]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("p",[s("strong",[t._v("注意转义")]),t._v("。")]),s("h4",{attrs:{id:"数字类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数字类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 数字类型")]),s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token property"}},[t._v('"age"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("25")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{attrs:{class:"token property"}},[t._v('"earthMass"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("5.97219e+24")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{attrs:{class:"token property"}},[t._v('"decimal"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("2.3")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{attrs:{class:"token property"}},[t._v('"negativeNumber"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" -"),s("span",{attrs:{class:"token number"}},[t._v("122.23")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("p",[t._v("可以是整数、小数、负数或者指数。")]),s("h4",{attrs:{id:"boolean-类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#boolean-类型","aria-hidden":"true"}},[t._v("#")]),t._v(" boolean 类型")]),s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token property"}},[t._v('"xiaokeLoveYuer"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("h4",{attrs:{id:"null-类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#null-类型","aria-hidden":"true"}},[t._v("#")]),t._v(" null 类型")]),s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token property"}},[t._v('"color"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token null"}},[t._v("null")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("p",[t._v("null 可以用来表达"),s("em",[t._v("无")]),t._v("的意思。需要注意的是，json 中没有 undefined 类型。")]),s("h4",{attrs:{id:"数组类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 数组类型")]),s("p",[t._v("数组类型就是值构成的列表和集合。一般来说，数组中的值应具有相同的数据类型(不是必须，而是为了可移植性)。数组类型也是复杂数据类型。")]),s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token property"}},[t._v('"name"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{attrs:{class:"token string"}},[t._v('"xiaoke"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token string"}},[t._v('"yuer"')]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("p",[t._v("比如这种:")]),s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{attrs:{class:"token property"}},[t._v('"title"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"xiaoke love yuer"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{attrs:{class:"token property"}},[t._v('"xiaokeLoveYuer"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{attrs:{class:"token property"}},[t._v('"title"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"yuer love xiaoke"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{attrs:{class:"token property"}},[t._v('"yuerLovexiaoke"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),s("hr"),s("h2",{attrs:{id:"json-schema"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#json-schema","aria-hidden":"true"}},[t._v("#")]),t._v(" JSON Schema")]),s("p",[t._v("JSON Schema，即 JSON 的一致性验证 (conformity validation)。之前提到的 JSON 验证器是确保 JSON 不存在"),s("strong",[t._v("语法错误")]),t._v("，而 JSON 的一致性检查意在确保"),s("strong",[t._v("数据符合要求")]),t._v("。主要有三点验证：")]),s("ul",[s("li",[t._v("值的数据类型是否正确")]),s("li",[t._v("是否包含所需要的数据")]),s("li",[t._v("值的形式是不是需要的")])]),s("p",[t._v("JSON Schema 还处于草案当中，官网地址是 "),s("a",{attrs:{href:"http://json-schema.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://json-schema.org/")]),t._v("。")]),s("p",[t._v("这是一个摘自官网的例子:")]),s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token property"}},[t._v('"$schema"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"http://json-schema.org/draft-06/schema#"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{attrs:{class:"token property"}},[t._v('"title"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"Product"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{attrs:{class:"token property"}},[t._v('"description"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"A product from Acme\'s catalog"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{attrs:{class:"token property"}},[t._v('"type"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"object"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{attrs:{class:"token property"}},[t._v('"properties"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{attrs:{class:"token property"}},[t._v('"id"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{attrs:{class:"token property"}},[t._v('"description"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"The unique identifier for a product"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{attrs:{class:"token property"}},[t._v('"type"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"integer"')]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{attrs:{class:"token property"}},[t._v('"name"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{attrs:{class:"token property"}},[t._v('"description"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"Name of the product"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{attrs:{class:"token property"}},[t._v('"type"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"string"')]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{attrs:{class:"token property"}},[t._v('"price"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{attrs:{class:"token property"}},[t._v('"type"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"number"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{attrs:{class:"token property"}},[t._v('"minimum"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{attrs:{class:"token property"}},[t._v('"required"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token string"}},[t._v('"id"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"name"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"price"')]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("p",[t._v("上面的代码是一个 Production Schema，也是一个 JSON。内容有点长，待我一步一步解释。")]),s("ul",[s("li",[s("code",[t._v("$schema")]),t._v(" 关键字")])]),s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token property"}},[t._v('"$schema"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"http://json-schema.org/draft-06/schema#"')]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("p",[t._v("声明其为一个 schema 文件，值为所用 draft 版本的链接，因为还处于草案阶段。")]),s("ul",[s("li",[s("code",[t._v("title")]),t._v(" 关键字")])]),s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token property"}},[t._v('"title"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"Product"')]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("p",[t._v("JSON Schema 的标题。这是个描述性的关键字，和 "),s("code",[t._v("description")]),t._v(" 一样，用于 JSON Schema 的描述，不施加任何验证性内容。")]),s("ul",[s("li",[s("code",[t._v("type")]),t._v(" 关键字")])]),s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token property"}},[t._v('"type"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"object"')]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("p",[t._v("type 关键字用于对 JSON 数据类型的限制。")]),s("ul",[s("li",[s("code",[t._v("properties")]),t._v(" 关键字")])]),s("p",[s("code",[t._v("properties")]),t._v(" 关键字就是我们想要的 JSON 的 name/value 对。")]),s("ul",[s("li",[s("code",[t._v("required")]),t._v(" 关键字")])]),s("p",[s("code",[t._v("required")]),t._v(" 关键字用来表示必填字段。")]),s("p",[t._v("从而，对于上述的第一个问题和第二个问题，我们就可以很好地解决了。对于第三个问题，我们可以通过 "),s("code",[t._v("minimum")]),t._v("、"),s("code",[t._v("maxLength/minLength")]),t._v("、"),s("code",[t._v("exclusiveMinimum")]),t._v(" 来解决。")]),s("p",[t._v("下面就是一个验证通过的 JSON：")]),s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{attrs:{class:"token property"}},[t._v('"id"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{attrs:{class:"token property"}},[t._v('"name"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"xiaokeloveyuer"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{attrs:{class:"token property"}},[t._v('"price"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("4")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("hr"),s("h2",{attrs:{id:"json-序列和反序列化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#json-序列和反序列化","aria-hidden":"true"}},[t._v("#")]),t._v(" JSON 序列和反序列化")]),s("p",[t._v("JSON 对象拥有两个方法："),s("code",[t._v("stringify()")]),t._v(" 和 "),s("code",[t._v("parse()")]),t._v("。")]),s("ul",[s("li",[s("code",[t._v("stringify()")]),t._v(" 将 JavaScript 序列化为 JSON 字符串。这叫"),s("em",[t._v("序列化")]),t._v("，本意是"),s("strong",[t._v("将对象转换为文本")]),t._v("的过程。")]),s("li",[s("code",[t._v("parse()")]),t._v(" 将 JSON 字符串解析为原生 JavaScript 对象。这叫"),s("em",[t._v("反序列化")]),t._v("，也叫解析，是"),s("strong",[t._v("将文本转换为对象")]),t._v("的过程。")])]),s("hr"),s("h2",{attrs:{id:"json-中的安全问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#json-中的安全问题","aria-hidden":"true"}},[t._v("#")]),t._v(" JSON 中的安全问题")]),s("p",[t._v("暂略。")]),s("hr"),s("h2",{attrs:{id:"json-的其他应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#json-的其他应用场景","aria-hidden":"true"}},[t._v("#")]),t._v(" JSON 的其他应用场景")]),s("h3",{attrs:{id:"与数据库交互"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#与数据库交互","aria-hidden":"true"}},[t._v("#")]),t._v(" 与数据库交互")]),s("h3",{attrs:{id:"服务器端的-json"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务器端的-json","aria-hidden":"true"}},[t._v("#")]),t._v(" 服务器端的 JSON")]),s("h3",{attrs:{id:"作为配置文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作为配置文件","aria-hidden":"true"}},[t._v("#")]),t._v(" 作为配置文件")]),s("p",[t._v("作为静态配置文件也让 JSON 大放异彩。比如 npm 的 package.json 文件，VSCode 都采用 JSON 作为静态配置文件。")])])}],!1,null,null,null);a.default=r.exports}}]);