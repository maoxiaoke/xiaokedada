(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{55:function(t,e,s){"use strict";s.r(e);var i=s(0),a=Object(i.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._m(1),s("p",[t._v("本文主要是总结一些常见的布局。")]),t._m(2),t._m(3),s("p",[t._v("每个元素都有一个display属性，比较常见的有以下值:")]),t._m(4),s("hr"),t._m(5),t._m(6),s("p",[t._v("看这个例子:")]),t._m(7),t._m(8),t._m(9),s("hr"),t._m(10),t._m(11),t._m(12),s("p",[t._v("这个属性值确保我们的内边距和边框的宽度都不会影响width和height的属性。也就是说，内边距和外边距的宽度都包含在width和height属性中。")]),s("hr"),t._m(13),s("p",[t._v("这个属性控制浏览器在哪里并且怎样显示某个元素。有以下值:")]),t._m(14),s("hr"),t._m(15),t._m(16),t._m(17),s("hr"),t._m(18),t._m(19),t._m(20),s("hr"),t._m(21),s("p",[t._v("请参考[Flexbox的完全教程]("+t._s(t._f("prepend: site.baseurl")("/2017/07/15/Flex"))+")")]),s("hr"),t._m(22),t._m(23),s("p",[t._v("在 CSS2.2 中，一个盒子有三种定位方案。")]),t._m(24),t._m(25),s("p",[t._v("所以，浮动元素和绝对定位元素的区别在于:")]),t._m(26),t._m(27),s("hr"),t._m(28)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"css的布局方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css的布局方式","aria-hidden":"true"}},[this._v("#")]),this._v(" CSS的布局方式")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("在CSS的布局世界中，大概有"),s("strong",[t._v("固定宽度布局")]),t._v("、"),s("strong",[t._v("流式布局")]),t._v("、"),s("strong",[t._v("响应式布局")]),t._v("和"),s("strong",[t._v("弹性布局")]),t._v("。固定宽度的布局，就是不管浏览器宽度有多宽，页面中内容的宽度始终一致。流式布局，就是宽度百分比设定，而不是绝对的像素值，这样随着改变浏览器窗口的尺寸，页面也随之变化。响应式布局主要是为不同宽度的尺寸的设备提供不同的布局。")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("a",{attrs:{href:"#css"}},[t._v("CSS的布局方式")]),s("ul",[s("li",[s("a",{attrs:{href:"#display"}},[t._v("display")])]),s("li",[s("a",{attrs:{href:"#margin--auto"}},[t._v("margin: auto")])]),s("li",[s("a",{attrs:{href:"#box-sizing"}},[t._v("box-sizing")])]),s("li",[s("a",{attrs:{href:"#position"}},[t._v("position")])]),s("li",[s("a",{attrs:{href:"#float"}},[t._v("float")])]),s("li",[s("a",{attrs:{href:"#overflow--auto--overflow--hidden"}},[t._v("overflow: auto 和 overflow: hidden")])]),s("li",[s("a",{attrs:{href:"#flex"}},[t._v("flex")])]),s("li",[s("a",{attrs:{href:"#css-22"}},[t._v("CSS 2.2 的定位方案")])])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"display"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#display","aria-hidden":"true"}},[this._v("#")]),this._v(" display")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("none: 一些元素得默认属性，通常被JavaScript用来在"),s("strong",[t._v("不删除元素")]),t._v("得情况下隐藏或显示元素。值得注意的是，被隐藏的元素不占据物理空间，但是"),s("code",[t._v("visibility: hidden;")]),t._v("还是会占据空间")]),s("li",[t._v("block: 块级元素，开始一行并且尽可能撑满容器")]),s("li",[t._v("inline: 行内元素")]),s("li",[t._v("inline-block: 元素在行内，但是却表现得像块级元素，也就是说有自己"),s("code",[t._v("width")]),t._v("、"),s("code",[t._v("height")]),t._v("等属性")]),s("li",[t._v("flex: 弹性盒")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"margin-auto"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#margin-auto","aria-hidden":"true"}},[this._v("#")]),this._v(" margin: auto")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("对一个块级元素使用"),e("code",[this._v("margin: 0 auto")]),this._v("，这样设置"),e("strong",[this._v("左右外边距")]),this._v("为auto可以使其水平居中。这是一种让块级元素水平居中的方法。")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{attrs:{class:"token selector"}},[t._v("#main")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token property"}},[t._v("width")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 600px"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token property"}},[t._v("margin")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0 auto"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("这个样式表设置我们的一个块级元素的宽度是600px。但是如果把浏览器窗口缩小到比width要小的情况下，就会显示一个水平的滚动条来显示。为了更适应小窗口的变化，可以用"),e("code",[this._v("max-width")]),this._v("属性会更为妥帖。")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{attrs:{class:"token selector"}},[t._v("#main")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token property"}},[t._v("max-width")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 600px"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token property"}},[t._v("margin")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0 auto"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"box-sizing"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#box-sizing","aria-hidden":"true"}},[this._v("#")]),this._v(" box-sizing")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("为了改变传统盒子的计算问题，CSS3有了一个box-sizing属性。这个属性如果设置成"),e("code",[this._v("border-box")]),this._v("。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{attrs:{class:"token property"}},[this._v("box-sizing")]),e("span",{attrs:{class:"token punctuation"}},[this._v(":")]),this._v(" border-box"),e("span",{attrs:{class:"token punctuation"}},[this._v(";")]),this._v("\n")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"position"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#position","aria-hidden":"true"}},[this._v("#")]),this._v(" position")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("static: 默认值，表示某元素不会被"),s("em",[t._v("positioned")]),t._v("，元素都有 position 属性值，没有设置该属性则均表示"),s("code",[t._v("static")]),t._v("。")]),s("li",[t._v("relative: 表现得和static一样，除非你设置了"),s("code",[t._v("top")]),t._v("、"),s("code",[t._v("bottom")]),t._v("、"),s("code",[t._v("left")]),t._v("、"),s("code",[t._v("right")]),t._v("等使其偏离正常位置的值。元素不会脱离文档流。")]),s("li",[t._v("fixed: 是相对于视口来定位，这意味着就算是页面滚动，它还是会停留在原来的位置。比如，有些网站的页脚。和relative一样，"),s("code",[t._v("top")]),t._v("、"),s("code",[t._v("bottom")]),t._v("、"),s("code",[t._v("left")]),t._v("、"),s("code",[t._v("right")]),t._v("这些属性都能用。元素完全脱离文档流。")]),s("li",[t._v("absolute: 这是一个最棘手的属性值，它和fixed表现类似，但是它不是相对于视口，而是相对于最近的一个"),s("em",[t._v("positioned")]),t._v("祖先元素。如果没有"),s("em",[t._v("positioned")]),t._v("的祖先元素，那么就相对于文档的body 元素。元素完全脱离文档流。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"float"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#float","aria-hidden":"true"}},[this._v("#")]),this._v(" float")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("浮动布局，常用来实现文本环绕。有"),e("code",[this._v("left")]),this._v("、"),e("code",[this._v("right")]),this._v("和"),e("code",[this._v("none")]),this._v("三个属性值。")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[s("code",[t._v("clear")]),t._v("属性则常用来清除和控制浮动。"),s("code",[t._v("left")]),t._v("值用来清除向左浮动、"),s("code",[t._v("right")]),t._v("用来清除向右浮动，"),s("code",[t._v("both")]),t._v("用来清除向左向右浮动。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"overflow-auto-和-overflow-hidden"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#overflow-auto-和-overflow-hidden","aria-hidden":"true"}},[this._v("#")]),this._v(" overflow: auto 和 overflow: hidden")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("在布局的时候，经常会遇到"),e("em",[this._v("溢出")]),this._v("的情况，overflow可以针对溢出做一些事情。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("overflow: hidden ， 隐藏超出盒子边界的内容")]),e("li",[this._v("overflow: scroll ， 添加滚动条")]),e("li",[this._v("overflow: auto ，需要的时候添加滚动条")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"flex"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex","aria-hidden":"true"}},[this._v("#")]),this._v(" flex")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"css-2-2-的定位方案"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css-2-2-的定位方案","aria-hidden":"true"}},[this._v("#")]),this._v(" CSS 2.2 的定位方案")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("标准: "),e("a",{attrs:{href:"https://www.w3.org/TR/CSS22/visuren.html",target:"_blank",rel:"noopener noreferrer"}},[this._v("Positioning schemes")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("code",[t._v("Normal flow")]),t._v(": normal flow 包括 BFC 的 block-level boxes 、IFC 的 line-level boxes 和 "),s("code",[t._v("relative positioning")]),t._v(" 的 block-level boxes 和 line-level boxes。在国内，也一般称之为 文档流。")]),s("li",[s("code",[t._v("Floats")]),t._v(": 在 float model 中，盒子先通过 normal flow 放置，然后脱离 flow (脱离文档流)，尽可能地浮动到左边或右边。内容环绕在浮动元素的周围。")]),s("li",[s("code",[t._v("Absolute positioning")]),t._v(": 在 absolute positioning model 中，盒子完全从 normal flow 中脱离(对随后的同级元素没有任何影响)，然后使用 TRBL 设置它的位置。包括两种: "),s("code",[t._v("position: absolute")]),t._v(" 和 "),s("code",[t._v("position: fixed")]),t._v("。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("一个元素 out of flow (脱离文档流) 是说该元素 floated、absolutely positioned 或者是 根元素。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("浮动元素尽可能地浮动到左边或者右边，直到接触到它的 containing block (可以理解为父元素) 或者 另一个浮动块的外边距。内容会环绕在浮动元素的周围，类似于文本环绕 (实际上也是出自于此)。")]),e("li",[this._v("absolute 和 fixed 会完全脱离 normal flow，这意味着完全不占据空间，normal flow 表现得就好像没有这个元素一样。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("relative 不会脱离 normal flow，就意味着元素保留原来的空间，通过 TRBL 发生偏移，从而有可能会造成重叠。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("参考： "),e("a",{attrs:{href:"http://zh.learnlayout.com/",target:"_blank",rel:"noopener noreferrer"}},[this._v("学习CSS布局")])])}],!1,null,null,null);e.default=a.exports}}]);