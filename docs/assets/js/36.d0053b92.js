(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{180:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[t._m(0),a("p",[t._v("之前，我们是通过<<JavaScript DOM编程艺术>>这本书来学习原生的 JavaScript DOM 编程。这里呢，想更加具体地将这些方法和属性都罗列出来。")]),a("p",[t._v("首先，理解节点(node)的概念。DOM 树其实就是一棵节点树，节点分为多种不同的类型。")]),t._m(1),t._m(2),t._m(3),t._m(4),a("blockquote",[a("p",[t._v("注意，属性节点已经被spec废置了(因为确实没啥用)，详见"),a("a",{attrs:{href:"https://www.w3.org/TR/2015/REC-dom-20151119/#interface-node",target:"_blank",rel:"noopener noreferrer"}},[t._v("W3C DOM4"),a("OutboundLink")],1)])]),t._m(5),t._m(6),t._m(7),t._m(8),t._m(9),t._m(10),a("p",[t._v("举个栗子：")]),t._m(11),a("p",[t._v("节点树如下：")]),a("p",[t._v("![nodeTree]("+t._s(t._f("prepend: site.baseurl")("/styles/images/dom/nodetree.png"))+")")]),a("p",[t._v("这个网址"),a("a",{attrs:{href:"http://software.hixie.ch/utilities/js/live-dom-viewer/#",target:"_blank",rel:"noopener noreferrer"}},[t._v("Live DOM Viewer"),a("OutboundLink")],1),t._v("提供在线的 DOM Tree 查看。")]),t._m(12),t._m(13),t._m(14),t._m(15),t._m(16),a("p",[t._v("以上这四种方法必须先取得父节点(比如，使用 parentNode 属性)。另外，并不是所有类型都有子节点，如果在不支持子节点的节点上调用这些方法，将会导致错误。")]),a("p",[t._v("下面的这两个方法是所有类型的节点都有的。")]),t._m(17),a("hr"),t._m(18),a("p",[t._v("Document 类型表示文档。在浏览器中，document 对象是 HTMLDocument (继承自 Document 类型)的一个实例，表示整个 HTML 文档。 而且，document 对象是 window 对象的一个属性，因此可以将其作为全局对象来访问。")]),t._m(19),t._m(20),a("p",[t._v("有两个内置的方法访问其子节点的快捷方式。")]),t._m(21),t._m(22),a("p",[t._v("作为 HTMLDocument 的一个实例，document 对象还有一些标准的 Document 对象所没有的属性。")]),t._m(23),t._m(24),t._m(25),t._m(26),a("p",[t._v("除了属性和方法，document 对象还有一些特殊的集合。这些集合都是 HTMLCollection 对象，为访问文档常用的部分提供了快捷方式。")]),t._m(27),a("hr"),t._m(28),a("p",[t._v("Element 类型主要提供对元素标签名、子节点及特性的访问。")]),t._m(29),t._m(30),t._m(31),t._m(32),t._m(33),t._m(34),t._m(35),t._m(36),t._m(37),t._m(38),t._m(39),t._m(40),t._m(41),t._m(42),t._m(43),t._m(44),t._m(45),t._m(46),t._m(47),t._m(48),a("hr"),t._m(49),a("p",[t._v("文本节点包含纯文本内容。纯文本中可以包含转义后的 HTML 字符，但不能包含 HTML 代码。")]),a("p",[t._v('Text 节点的 nodeType 是 3，nodeName 的值是 "#text"，nodeValue 的值为节点所包含的文本，没有子节点。要访问 Text 节点中的文本，可以通过 nodeValue 属性或 data 属性，这两个属性中包含的值相同。')]),a("p",[t._v("以下方法可以操作节点中的文本:")]),t._m(50),t._m(51),t._m(52),t._m(53),t._m(54),a("p",[t._v("一般情况下，只有一个文本子节点。不过，某些情况下，也可能包含多个文本子节点。如果两个文本子节点是相邻的同胞节点，那么这两个节点中文本就会连起来显示，中间不会有空格。")]),t._m(55),t._m(56),t._m(57),a("p",[t._v("分割文本节点是从文本节点中提取数据的一种常用的 DOM 解析技术。")]),a("hr"),t._m(58),a("p",[t._v("之前我们说到，属性节点已被废置了。现在基本都是通过 getAttribute()、setAttribute() 和 removeAttribute()，或者直接进行属性节点的操作(因为所有的特新都是 Element 节点的属性)。")]),a("p",[t._v("但是，仍保留着一些方法可以创建属性节点。")]),t._m(59),a("p",[t._v("之后就可以使用 attributes 属性(上面提到的)、getAttributeNode()方法以及 getAttribute() 方法访问该特性。")]),a("hr"),t._m(60),a("p",[t._v("虽然上述的 API 已经非常完善了，但是社区还是 DOM API 进行了扩展。包括 Selectors API、Element Traversal API、HTML5 DOM 扩展、专用扩展。")]),t._m(61),t._m(62),t._m(63),t._m(64),t._m(65),a("p",[t._v("这个 API 出现的原因在于对于元素间的空白字符，IE9 之前的版本不会返回文本节点，而其他浏览器会返回文本节点。这样，在使用 childNodes 和 firstChild 等属性时的行为不一致。所以 Element Traversal 规范新定义了一组属性，主要针对元素节点。")]),t._m(66),t._m(67),t._m(68),t._m(69),t._m(70),t._m(71),t._m(72),a("p",[t._v("例如：")]),t._m(73),t._m(74),t._m(75),a("p",[t._v("另外就是新增的 document.hasFocus() 方法，用于确定文档是否获得了焦点。")]),t._m(76),t._m(77),t._m(78),t._m(79),t._m(80),t._m(81),t._m(82),t._m(83),t._m(84),a("p",[t._v("读模式下，如果设置的值仅是文本而没有标签，那么结果就是设置纯文本。比如：")]),t._m(85),t._m(86),t._m(87),t._m(88),t._m(89),t._m(90),a("p",[t._v("这个属性得到了大多数浏览器的支持。")]),t._m(91),a("p",[t._v("这个方法用来检测节点是否是后代节点。方法接收一个参数，即要检测的后代节点。")]),t._m(92),a("p",[t._v("innerText 和 outerText 属性没有 innerHTML 和 outerHTML 属性那么好的运气。")]),a("p",[t._v("innerText 属性操作元素中包含的所有文本内容，包括子文档树的文本。")]),t._m(93),a("p",[t._v("除了作用范围扩大到包含调用它的节点之外，outerText 和 innerText 基本没有什么多大区别。在读取文本时，outerText 和 innerText 的结果完全一样。但在写模式下，outerText 会替换整个元素(包括子节点)。")]),a("hr"),t._m(94),t._m(95),t._m(96)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"再来仔细研究dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#再来仔细研究dom","aria-hidden":"true"}},[this._v("#")]),this._v(" 再来仔细研究DOM")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"node-类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-类型","aria-hidden":"true"}},[this._v("#")]),this._v(" Node 类型")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"有关节点类型的属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#有关节点类型的属性","aria-hidden":"true"}},[this._v("#")]),this._v(" 有关节点类型的属性")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Node 是一个基本类型，是一个抽象的接口。其他所有的节点类型都继承自这个 Node 类型。所以"),s("strong",[this._v("对于每个节点")]),this._v("，都有一个 "),s("code",[this._v("nodeType")]),this._v(" 属性，用于表明节点类型。比较常用的就是以下两种：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("Node.ELEMENT_NODE(1) 元素节点")]),s("li",[this._v("Node.TEXT_NODE(3) 文本节点")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("除此之外，每个节点还有 "),s("code",[this._v("nodeName")]),this._v(" 和 "),s("code",[this._v("nodeValue")]),this._v(" 属性。前者会返回符合其类型的字符串，后者返回节点的值。比如:")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[t._v("如果是元素节点，"),a("code",[t._v("nodeName")]),t._v(" 返回大写的标签名， "),a("code",[t._v("nodeValue")]),t._v(" 永远返回 "),a("code",[t._v("null")]),t._v(";")]),a("li",[t._v("如果是文本节点，"),a("code",[t._v("nodeName")]),t._v(" 返回 "),a("code",[t._v('"#text"')]),t._v(", "),a("code",[t._v("nodeValue")]),t._v(" 返回文本内容。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"有关节点关系的属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#有关节点关系的属性","aria-hidden":"true"}},[this._v("#")]),this._v(" 有关节点关系的属性")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("每个节点都有一个 "),s("code",[this._v("childNodes")]),this._v(" 属性，其中保存一个 "),s("code",[this._v("NodeList")]),this._v(" 对象，是一个类数组，用于保存一组有序的节点(还有个 HTMLCollection 对象，保存一组元素节点)。比如:")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[t._v("  "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("main-wrapper"),a("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ul")]),t._v(" "),a("span",{attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("deleteItem"),a("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),t._v(" "),a("span",{attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("items"),a("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Yuer"),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),t._v(" "),a("span",{attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("items"),a("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Maoxiaoke"),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),t._v(" "),a("span",{attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("items"),a("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("I Love you"),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("ul")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),a("span",{attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text/javascript"),a("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{attrs:{class:"token script language-javascript"}},[t._v("\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" div "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getElementsByTagName")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'div'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childNodes"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('//[text, ul.deleteItem, text]，其中 text 节点的 nodeValue 是""')]),t._v("\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ul "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getElementsByTagName")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'ul'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childNodes"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("//[text, li.items, text, li.items, text, li.items, text]")]),t._v("\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" liValue1 "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getElementsByTagName")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'li'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childNodes"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nodeValue"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// "Yuer"')]),t._v("\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" liValue2 "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getElementsByTagName")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'li'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHTML"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// "Yuer"')]),t._v("\n    ")]),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("注意1. childNodes 属性获取的是"),s("em",[this._v("直接")]),this._v("子节点。\n注意2. 并非所有的空白都会变成文本节点")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{attrs:{class:"token doctype"}},[t._v("<!DOCTYPE html>")]),t._v("\n"),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),t._v(" "),a("span",{attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("e")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("title")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Aliens?"),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("title")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Why yes."),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("如果让 IE 来解析解析这些代码，可能又是另一种情况了: 空白符的文本节点可能并不会计算在内。所以由于浏览器之间的这种差别，在执行某项操作之前，通常都要先检查以下 nodeType 的属性。")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("每个节点都有一个 "),a("code",[t._v("parentNode")]),t._v(" 属性，指向 DOM 树的父节点。"),a("code",[t._v("previousSibling")]),t._v(" 属性指向前向节点，"),a("code",[t._v("nextSibling")]),t._v(" 属性指向后向节点。"),a("code",[t._v("firstChild")]),t._v("指向第一个子节点，"),a("code",[t._v("lastChild")]),t._v("指向最后一个子节点。当然了，如果上述节点的属性没有指向，那都指向 "),a("code",[t._v("null")]),t._v("。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("所有节点还有一个 "),a("code",[t._v("ownerDocument")]),t._v(" 属性，该属性指向表示整个文档的文档节点(DOCUMENT_NODE)，也就是 "),a("code",[t._v("Document")]),t._v("，nodeName 是 "),a("code",[t._v('"#document"')]),t._v("，nodeType 是 "),a("code",[t._v("9")]),t._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"节点的操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#节点的操作","aria-hidden":"true"}},[this._v("#")]),this._v(" 节点的操作")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[a("code",[t._v("appendChild(node)")]),t._v(" 向 childNodes 列表末尾添加一个节点，返回新增节点。")]),a("li",[a("code",[t._v("insertBefore(node, child)")]),t._v(" 方法接收两个参数: 要插入的节点和作为参照的节点，要插入的节点插入到参照节点的前面，返回新增节点")]),a("li",[a("code",[t._v("removeChild(node)")]),t._v(" 移除节点，返回移除节点")]),a("li",[a("code",[t._v("replaceChild(node, child)")]),t._v(" 方法接收两个参数: 要插入的节点和要替换的节点")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("code",[this._v("cloneNode(boolean)")]),this._v(" 接收一个布尔值，true 表示深复制；false 表示浅复制。")]),s("li",[s("code",[this._v("normalize()")]),this._v(" 这个方法的唯一作用是处理文档树中的文本节点。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"document-节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#document-节点","aria-hidden":"true"}},[this._v("#")]),this._v(" Document 节点")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("上面我们说到，节点的 "),a("code",[t._v("ownerDocument")]),t._v(" 属性指向 Document 节点，nodeName 是 "),a("code",[t._v('"#document"')]),t._v("，nodeType 是 "),a("code",[t._v("9")]),t._v("，nodeValue 是 "),a("code",[t._v("null")]),t._v("，parentNode 是 "),a("code",[t._v("null")]),t._v("，ownerDocument 是 "),a("code",[t._v("null")]),t._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"文档子节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文档子节点","aria-hidden":"true"}},[this._v("#")]),this._v(" 文档子节点")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[a("code",[t._v("documentElement")]),t._v(" 属性，这个属性始终指向 HTML页面的 "),a("code",[t._v("<html>")]),t._v(" 的元素。当然，也可以通过 childNodes列表来访问。")]),a("li",[a("code",[t._v("body")]),t._v(" 属性，直接指向 "),a("code",[t._v("<body>")]),t._v(" 元素")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"文档信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文档信息","aria-hidden":"true"}},[this._v("#")]),this._v(" 文档信息")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[a("code",[t._v("title")]),t._v(" 属性，取得当前页面的标题")]),a("li",[a("code",[t._v("URL")]),t._v(" 属性，取得页面完整的 URL")]),a("li",[a("code",[t._v("domain")]),t._v(" 属性，只包含页面的域名")]),a("li",[a("code",[t._v("referrer")]),t._v(" 属性，保存着链接到当前页面的那个页面的 URL")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"取得元素的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#取得元素的方法","aria-hidden":"true"}},[this._v("#")]),this._v(" 取得元素的方法")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[a("code",[t._v("getElementById(id)")]),t._v(" 接收元素的 id，如果页面中有多个 ID 值相同，只返回文档中第一次出现的元素")]),a("li",[a("code",[t._v("getElementsByTagName(tagName)")]),t._v(" 接收要取得的元素的标签名，返回包含零或多个元素的 "),a("code",[t._v("HTMLCollection")]),t._v(" 对象")]),a("li",[a("code",[t._v("getElementsByClassName(className)")]),t._v(" 接收元素的属性名，返回零或多个元素 "),a("code",[t._v("HTMLCollection")]),t._v(" 对象。这个方法是在 HTML5 中提出来的。")]),a("li",[a("code",[t._v("getElementsByName(name)")]),t._v(" 接收元素的 name 特性，返回零或多个元素 "),a("code",[t._v("HTMLCollection")]),t._v(" 对象。如果多个 name 特性的值相同，只返回第一个元素")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"特殊集合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特殊集合","aria-hidden":"true"}},[this._v("#")]),this._v(" 特殊集合")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[a("code",[t._v("document.anchors")]),t._v(" 包含文档中所有带 name 特性的 "),a("code",[t._v("<a>")]),t._v(" 元素")]),a("li",[a("code",[t._v("document.forms")]),t._v(" 包含文档中所有 "),a("code",[t._v("<form>")]),t._v(" 元素")]),a("li",[a("code",[t._v("document.images")]),t._v(" 包含文档中所有 "),a("code",[t._v("<img>")]),t._v(" 元素")]),a("li",[a("code",[t._v("document.links")]),t._v(" 包含文档中所有带 href 特性的 "),a("code",[t._v("<a>")]),t._v(" 元素")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"element-节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#element-节点","aria-hidden":"true"}},[this._v("#")]),this._v(" Element 节点")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Element 节点的 nodeType 是 1，nodeName 的值是元素标签名的"),s("strong",[this._v("大写形式")]),this._v("，nodeValue 的值是 null。要访问元素的标签名，可以使用 nodeName属性，也可以使用 "),s("code",[this._v("tagName")]),this._v(" 属性，两者的结果是一样的，后者只是为了表述更清晰。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"常见的-element-节点属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见的-element-节点属性","aria-hidden":"true"}},[this._v("#")]),this._v(" 常见的 Element 节点属性")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("所有的 HTML 元素都由 HTMLElement 类型表示。"),s("strong",[this._v("所有的特性都是属性")]),this._v("。有以下常见的属性：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("code",[this._v("id")]),this._v(" 就是元素的 ID 标识符")]),s("li",[s("code",[this._v("className")]),this._v(" 与元素的 class 特性对应")]),s("li",[s("code",[this._v("title")])]),s("li",[s("code",[this._v("style")]),this._v(" 与元素的 style 特性对应")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"有关特性的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#有关特性的方法","aria-hidden":"true"}},[this._v("#")]),this._v(" 有关特性的方法")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("code",[this._v("getAttribute()")]),this._v(" 获得特性值")]),s("li",[s("code",[this._v("setAttribute()")]),this._v(" 设置特性，这个方法接收两个参数：要设置的特性名和值。")]),s("li",[s("code",[this._v("removeAttribute()")]),this._v(" 彻底删除元素的特性")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("getAttribute()")]),this._v(" 其实大多数都可以直接由节点属性得到。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("myDiv"),a("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("wrapper"),a("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{attrs:{class:"token style-attr language-css"}},[a("span",{attrs:{class:"token attr-name"}},[t._v(" "),a("span",{attrs:{class:"token attr-name"}},[t._v("style")])]),a("span",{attrs:{class:"token punctuation"}},[t._v('="')]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token property"}},[t._v("color")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("red"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{attrs:{class:"token property"}},[t._v("background-color")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" yellow"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")])]),a("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("I Love Yuer"),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{attrs:{class:"token script language-javascript"}},[t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" div "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"myDiv"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndiv"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getAttribute")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"id"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v('//"myDiv"')]),t._v("\ndiv"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v('//"myDiv"')]),t._v("\ndiv"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getAttribute")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"class"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v('//"wrapper"，注意不是 className')]),t._v("\ndiv"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("className"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v('//"wrapper"')]),t._v("\ndiv"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getAttribute")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"style"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// "color:red;background-color: yellow;"')]),t._v("\ndiv"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("//CSSStyleDeclaration")]),t._v("\n")]),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("但有两类特殊的特性，虽然有对应的属性名，但属性的值与通过 "),a("code",[t._v("getAttribute()")]),t._v(" 返回的值并不相同。一类是 style 属性，"),a("code",[t._v("getAttribute()")]),t._v(" 返回 style 属性值的文本，而通过 "),a("code",[t._v(".style")]),t._v(" 属性来访问则会返回一个对象。另一种就是就是 onclick 这样的事件处理函数。"),a("code",[t._v("getAttribute()")]),t._v(" 相应代码的字符串，而访问 "),a("code",[t._v(".onclick")]),t._v(" 属性则会返回一个函数。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("setAttribute()")]),this._v(" 其实大多时候也可以直接由节点属性设置。比如:")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("div"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"someOtherId"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndiv"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("className "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"myDivClass"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("但是问题是，无法通过上面这个方式添加"),s("strong",[this._v("自定义属性")]),this._v("。而 "),s("code",[this._v("setAttribute()")]),this._v(" 是可以的。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("div"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("myColor "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"red"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("//虽然为 div 添加了一个名为 myColor的属性，但大多数浏览器上，这个属性并不会变成特性。")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"attributes-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#attributes-属性","aria-hidden":"true"}},[this._v("#")]),this._v(" attributes 属性")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("attributes 属性中包含一个 "),s("code",[this._v("NamedNodeMap")]),this._v(" 的对象，也是一个类数组。元素的每一个特性都保存在这个对象当中。有以下的方法：")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[a("code",[t._v("getNamedItem(name)")]),t._v(" 得到元素的特性")]),a("li",[a("code",[t._v("removeNamedItem(name)")]),t._v(" 从列表中移除")]),a("li",[a("code",[t._v("setNamedItem(name)")]),t._v(" 向列表中添加")]),a("li",[a("code",[t._v("item(pos)")]),t._v(" 返回位于数字 pos 位置处的节点")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("相比起前面 getAttribute() 等方法，上面这些方法并不方便，所以也很少使用。但是，"),s("strong",[this._v("如果向遍历元素的特性")]),this._v("，attributes 属性倒是可以派上用场。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"创建元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建元素","aria-hidden":"true"}},[this._v("#")]),this._v(" 创建元素")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("使用 "),s("code",[this._v("document.createElement(tagName)")]),this._v(" 方法创建新元素。之后，还可以为此元素添加更多的特性。但是这个方法只是创建了新元素，新元素尚未被添加到文档树中，因此设置这些新特性不会影响浏览器的显示。所有最后，要使用 appenChild()、insertBefore() 或 replaceChild() 等方法。例如:")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" div "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("createElement")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'div'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndiv"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHTML "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"I Love Yuer"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndiv"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"red"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndiv"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("className "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"lover"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" body "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbody"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("appendChild")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("div"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"文本节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文本节点","aria-hidden":"true"}},[this._v("#")]),this._v(" 文本节点")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[a("code",[t._v("apppendData(text)")]),t._v(" 将 text 添加到节点的末尾")]),a("li",[a("code",[t._v("deleteData(offset, count)")]),t._v(" 从 offset 指定的位置开始删除 count 个字符")]),a("li",[a("code",[t._v("insertData(offset, text)")]),t._v(" 在 offset 指定的位置插入 text")]),a("li",[a("code",[t._v("repalceData(offset, count, text)")]),t._v(" 用 text 替换从 offset 指定的位置开始到 offset + count 的文本")]),a("li",[a("code",[t._v("splitText(offset)")]),t._v(" 从 offset 指定的位置将当前文本节点分成两个文本节点")]),a("li",[a("code",[t._v("substringData(offset, count)")]),t._v(" 提取从 offset 指定的位置开始到 offset + count 为止处的字符串")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"创建文本节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建文本节点","aria-hidden":"true"}},[this._v("#")]),this._v(" 创建文本节点")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("使用 "),s("code",[this._v("document.createTextNode(text)")]),this._v(" 创建新文本节点，这个方法接受一个参数 -- 要插入节点中的文本。这当然是不够的，我们还需要将新文本节点添加到文档中已经存在的节点中，用的是 appenChild()、insertBefore() 或 replaceChild() 等方法。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" div "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getElementsByTagName")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'div'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" textNode "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("createTextNode")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"Hello World!"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndiv"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("appendChild")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("textNode"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"normalize-和-splittext-方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#normalize-和-splittext-方法","aria-hidden":"true"}},[this._v("#")]),this._v(" normalize() 和 splitText() 方法")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("于是，催生了一种能够将相邻文本节点合并的方法，即 "),s("code",[this._v("normalize()")]),this._v("。该方法在包含两个或多个文本节点的"),s("strong",[this._v("父元素")]),this._v("上调用，将所有文本节点合并成一个节点。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("相反操作，"),s("code",[this._v("splitText(num)")]),this._v(" 。这个方法将一个文本节点分割成两个文本节点。该方法接收一个数值，返回新文本节点，新文本节点包含剩下的文本。注意注意。拿前面创建文本节点的栗子。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" newNode "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" div"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("split")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("5")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndiv"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nodeValue"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// "Hello"')]),t._v("\nnewNode"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nodeValue"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// " World!"')]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"属性-特性-节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性-特性-节点","aria-hidden":"true"}},[this._v("#")]),this._v(" 属性(特性)节点")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("code",[this._v("document.createAttribute()")]),this._v(" 创建属性节点")]),s("li",[s("code",[this._v("(element).setAttributeNode()")]),this._v(" 将创建的特性添加到元素中")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"dom-扩展"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom-扩展","aria-hidden":"true"}},[this._v("#")]),this._v(" DOM 扩展")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"selectors-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#selectors-api","aria-hidden":"true"}},[this._v("#")]),this._v(" Selectors API")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Selectors API 致力于让浏览器原生支持 CSS 查询。有两个核心方法 "),s("code",[this._v("querySelector()")]),this._v(" 和 "),s("code",[this._v("querySelectorAll()")]),this._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("querySelector()")]),this._v(" 方法接收一个 CSS 选择符，返回与该模式匹配的"),s("strong",[this._v("第一个元素")]),this._v("，没有找到，返回 null。这个方法既可以通过 Document 类型调用，也可通过 Element 类型调用。前者会在文档元素的范围内查找匹配元素，后者只在该元素后代的范围内查找匹配的元素。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("querySelectorAll()")]),this._v(" 返回所有匹配的元素，即一个 NodeList 的实例。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"element-traversal-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#element-traversal-api","aria-hidden":"true"}},[this._v("#")]),this._v(" Element Traversal API")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[a("code",[t._v("firstElementChild")]),t._v(" 指向第一个子元素")]),a("li",[a("code",[t._v("lastElementChild")]),t._v(" 指向最后一个子元素")]),a("li",[a("code",[t._v("childElementCount")]),t._v(" 只返回"),a("strong",[t._v("所有子元素")]),t._v("的个数")]),a("li",[a("code",[t._v("previousElementSibling")]),t._v(" 前向一个同辈元素")]),a("li",[a("code",[t._v("nextElementSibling")]),t._v(" 后向一个同辈元素")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"html5-扩充"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#html5-扩充","aria-hidden":"true"}},[this._v("#")]),this._v(" HTML5 扩充")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"和-class-属性相关的扩充"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#和-class-属性相关的扩充","aria-hidden":"true"}},[this._v("#")]),this._v(" 和 class 属性相关的扩充")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("getElementsByClassName(className)")]),this._v(" 可以通过 document 和所有 HTML 元素调用该方法。这个方法可以传入一个或多个类名。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("classList")]),this._v(" 属性。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("主要是在操作多个类名时，对类型的删除和增加都非常不方便。为此，HTML5 新增一种操作类名的方法，即 classList 属性，是 "),s("code",[this._v("DOMTokenList")]),this._v(" 的实例。很显然，也是一个类数组对象。有以下方法：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("add(className) 添加类名，已经存在的话，就不用添加了")]),s("li",[this._v("contains(className) 表示列表中是否存在给定类名，返回布尔值")]),s("li",[this._v("remove(className) 从列表中删除给定的字符串")]),s("li",[this._v("toggle(value) 如果列表中已经存在给定的值，删除它；否则，添加它。")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("user myDiv wrapper"),a("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("..."),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{attrs:{class:"token script language-javascript"}},[t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" div "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getElementsByTagName")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"div"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  div"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("classList"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("remove")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"user"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")]),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"焦点管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#焦点管理","aria-hidden":"true"}},[this._v("#")]),this._v(" 焦点管理")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("document.activeElement")]),this._v(" 属性，这个属性始终会引用 DOM 中当前获得了焦点的元素。元素获得焦点的方式有页面加载、用户输入(通常是 Tab 键)、在代码中调用 focus() 方法。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"其他新增属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他新增属性","aria-hidden":"true"}},[this._v("#")]),this._v(" 其他新增属性")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("readyState")]),this._v(" 属性，该属性有两个可能的值。使用方法： document.readyState")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("loading: 正在加载文档")]),s("li",[this._v("complete: 文档加载完成")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("head")]),this._v(" 属性，这个属性引用文档的 "),s("code",[this._v("<head>")]),this._v(" 元素。使用方法： document.head")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("charset")]),this._v(" 属性，表示文档中实际使用的字符集。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("dataset")]),this._v(" 属性。HTML5 可以添加自定义属性，只需要前缀加上 "),s("code",[this._v("data-")]),this._v("，目的是为元素提供与渲染无关的信息，或者提供语义信息。添加完自定义属性之后，可以通过元素的 dataset 属性来访问自定义属性的值。dataset 属性的值是 DOMStringMap 的一个实例，是一个名值对的映射。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("innerHTML")]),this._v("属性")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在"),s("strong",[this._v("读模式")]),this._v("下，innerHTML 属性返回与调用元素的所有"),s("strong",[this._v("子节点")]),this._v("(包括元素，注释和文本节点)对应的 HTML 标记。在写模式下，innerHTML 会根据指定的值创建新的 DOM 树，然后用这个 DOM 树完全替换元素原先的"),s("strong",[this._v("所有子节点")]),this._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("不要指望所有的浏览器返回的 innerHTML 值完全相同。另外就是，并不是所有元素都支持 innerHTML 属性。")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("div"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHTML "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"Hello World!"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("outerHTML")]),this._v(" 属性")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在读模式下，outerHTML 返回"),s("strong",[this._v("调用它的元素及所有子节点的 HTML 标签")]),this._v("。在写模式下，outerHTML 会根据指定的 HTML 字符串创建新的 DOM 子树，然后用这个 DOM 子树完全替代"),s("strong",[this._v("调用元素")]),this._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"专有扩展"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#专有扩展","aria-hidden":"true"}},[this._v("#")]),this._v(" 专有扩展")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"children-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#children-属性","aria-hidden":"true"}},[this._v("#")]),this._v(" children 属性")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("还是因为 IE9 之前的版本与其他浏览器处理文本节点的空白符的差异，因此出现了 children 属性，这个属性是 HTMLCollection 的实例，只包含元素中"),s("strong",[this._v("还是元素的")]),this._v("子节点。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"contains-方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#contains-方法","aria-hidden":"true"}},[this._v("#")]),this._v(" contains 方法")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"innertext-属性和-outertext-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#innertext-属性和-outertext-属性","aria-hidden":"true"}},[this._v("#")]),this._v(" innerText 属性和 outerText 属性")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("注意和 innerHTML 的区别")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"注意的几点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注意的几点","aria-hidden":"true"}},[this._v("#")]),this._v(" 注意的几点")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"nodelist-htmlcollection-namednodemap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nodelist-htmlcollection-namednodemap","aria-hidden":"true"}},[this._v("#")]),this._v(" NodeList/HTMLCollection/NamedNodeMap")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("这三个集合是"),s("strong",[this._v("动态的")]),this._v("，也就是说，每当文档结构发生变化时，它们都会得到更新。")])}],!1,null,null,null);s.default=e.exports}}]);